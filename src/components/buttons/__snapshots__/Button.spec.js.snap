// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> unit tests should match snapshot 1`] = `
<Button
  onClick={
    [MockFunction] {
      "calls": Array [
        Array [
          SyntheticEvent {
            "_dispatchInstances": null,
            "_dispatchListeners": null,
            "_targetInst": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 225,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": Array [
                  "useRef",
                  "useContext",
                  "useContext",
                  "useMemo",
                  "useLayoutEffect",
                  "useLayoutEffect",
                  "useDebugValue",
                  "useDebugValue",
                  "useEffect",
                ],
                "_debugID": 223,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 211,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 213,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 215,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 217,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 219,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 221,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": RootFinder {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": [Circular],
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "value": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "value": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 10,
                          "treeBaseDuration": 0,
                          "type": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": [Circular],
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": Object {
                          "expirationTime": 0,
                          "firstContext": Object {
                            "context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                            "next": null,
                            "observedBits": 1073741823,
                          },
                          "responders": null,
                        },
                        "effectTag": 1,
                        "elementType": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 9,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                        "theme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                        "theme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": ThemeProvider {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "cachedTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                        "context": Object {},
                        "lastOuterTheme": undefined,
                        "lastTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                        "props": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "refs": Object {},
                        "renderProvider": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <RootFinder>
                        <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />
                      </RootFinder>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <RootFinder>
                        <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />
                      </RootFinder>,
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "text": "click me",
                      "variant": "round",
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "text": "click me",
                      "variant": "round",
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "text": "click me",
                      "variant": "round",
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 208,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 208,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <button>
                            click me
                          </button>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 20,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "text": "click me",
                            "variant": "round",
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <button>
                          click me
                        </button>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 20,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "text": "click me",
                              "variant": "round",
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      },
                      "_currentValue2": Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      },
                      "_threadCount": 0,
                    },
                    "next": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 517,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "text": "click me",
                  "variant": "round",
                },
                "memoizedState": Object {
                  "baseState": null,
                  "baseUpdate": null,
                  "memoizedState": Object {
                    "current": false,
                  },
                  "next": Object {
                    "baseState": null,
                    "baseUpdate": null,
                    "memoizedState": Array [
                      Array [
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "buttonGroup": "buttonGroup-0-2-1",
                            "square": "square-0-2-2",
                          },
                          "deployed": true,
                          "keyframes": Object {},
                          "options": Object {
                            "Renderer": [Function],
                            "classNamePrefix": "",
                            "classes": Object {
                              "buttonGroup": "buttonGroup-0-2-1",
                              "square": "square-0-2-2",
                            },
                            "generateId": [Function],
                            "index": -9007199254740991,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateId": [Function],
                              "id": 2,
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateId": [Function],
                                "id": Object {
                                  "minify": false,
                                },
                                "plugins": Array [],
                              },
                              "plugins": PluginsRegistry {
                                "plugins": Object {
                                  "external": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessStyle": [Function],
                                      "onUpdate": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                  "internal": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onCreateRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                  ],
                                },
                                "registry": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onUpdate": Array [
                                    [Function],
                                  ],
                                },
                              },
                              "version": "10.3.0",
                            },
                            "keyframes": Object {},
                            "link": false,
                            "meta": "Themed",
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "queue": undefined,
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              data-meta="Themed"
                            >
                              
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                            </style>,
                            "getPropertyValue": [Function],
                            "hasInsertedRules": false,
                            "removeProperty": [Function],
                            "setProperty": [Function],
                            "setSelector": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "buttonGroup": "buttonGroup-0-2-1",
                              "square": "square-0-2-2",
                            },
                            "counter": 0,
                            "index": Array [
                              Object {
                                "display": "flex",
                                "justify-content": "space-between",
                                "padding-top": "40px",
                                "width": "100%",
                              },
                              Object {
                                "background-color": "darkviolet",
                                "color": "#fff",
                                "font-weight": "bold",
                                "height": "40px",
                                "text-transform": "uppercase",
                                "width": "49%",
                              },
                            ],
                            "keyframes": Object {},
                            "map": Object {
                              ".buttonGroup-0-2-1": Object {
                                "display": "flex",
                                "justify-content": "space-between",
                                "padding-top": "40px",
                                "width": "100%",
                              },
                              ".square-0-2-2": Object {
                                "background-color": "darkviolet",
                                "color": "#fff",
                                "font-weight": "bold",
                                "height": "40px",
                                "text-transform": "uppercase",
                                "width": "49%",
                              },
                              "buttonGroup": Object {
                                "display": "flex",
                                "justify-content": "space-between",
                                "padding-top": "40px",
                                "width": "100%",
                              },
                              "square": Object {
                                "background-color": "darkviolet",
                                "color": "#fff",
                                "font-weight": "bold",
                                "height": "40px",
                                "text-transform": "uppercase",
                                "width": "49%",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classNamePrefix": "",
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "generateId": [Function],
                              "index": -9007199254740991,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateId": [Function],
                                "id": 2,
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateId": [Function],
                                  "id": Object {
                                    "minify": false,
                                  },
                                  "plugins": Array [],
                                },
                                "plugins": PluginsRegistry {
                                  "plugins": Object {
                                    "external": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                        "onUpdate": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                    ],
                                    "internal": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                    ],
                                  },
                                  "registry": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onUpdate": Array [
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "10.3.0",
                              },
                              "keyframes": Object {},
                              "link": false,
                              "meta": "Themed",
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "buttonGroup": Object {
                                "display": "flex",
                                "justifyContent": "space-between",
                                "paddingTop": "40px",
                                "width": "100%",
                              },
                              "square": Object {
                                "backgroundColor": "darkviolet",
                                "color": "#fff",
                                "fontWeight": "bold",
                                "height": "40px",
                                "textTransform": "uppercase",
                                "width": "49%",
                              },
                            },
                          },
                        },
                        Object {},
                      ],
                      Array [
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        },
                        Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      ],
                    ],
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "create": [Function],
                        "deps": Array [
                          undefined,
                        ],
                        "destroy": undefined,
                        "next": Object {
                          "create": [Function],
                          "deps": Array [
                            StyleSheet {
                              "attached": true,
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "deployed": true,
                              "keyframes": Object {},
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "queue": undefined,
                              "renderer": DomRenderer {
                                "element": <style
                                  data-jss=""
                                  data-meta="Themed"
                                >
                                  
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                </style>,
                                "getPropertyValue": [Function],
                                "hasInsertedRules": false,
                                "removeProperty": [Function],
                                "setProperty": [Function],
                                "setSelector": [Function],
                                "sheet": [Circular],
                              },
                              "rules": RuleList {
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "counter": 0,
                                "index": Array [
                                  Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                ],
                                "keyframes": Object {},
                                "map": Object {
                                  ".buttonGroup-0-2-1": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  ".square-0-2-2": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "raw": Object {
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "paddingTop": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "backgroundColor": "darkviolet",
                                    "color": "#fff",
                                    "fontWeight": "bold",
                                    "height": "40px",
                                    "textTransform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                              },
                            },
                          ],
                          "destroy": [Function],
                          "next": Object {
                            "create": [Function],
                            "deps": null,
                            "destroy": undefined,
                            "next": [Circular],
                            "tag": 192,
                          },
                          "tag": 36,
                        },
                        "tag": 36,
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "create": [Function],
                          "deps": Array [
                            StyleSheet {
                              "attached": true,
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "deployed": true,
                              "keyframes": Object {},
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "queue": undefined,
                              "renderer": DomRenderer {
                                "element": <style
                                  data-jss=""
                                  data-meta="Themed"
                                >
                                  
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                </style>,
                                "getPropertyValue": [Function],
                                "hasInsertedRules": false,
                                "removeProperty": [Function],
                                "setProperty": [Function],
                                "setSelector": [Function],
                                "sheet": [Circular],
                              },
                              "rules": RuleList {
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "counter": 0,
                                "index": Array [
                                  Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                ],
                                "keyframes": Object {},
                                "map": Object {
                                  ".buttonGroup-0-2-1": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  ".square-0-2-2": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "raw": Object {
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "paddingTop": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "backgroundColor": "darkviolet",
                                    "color": "#fff",
                                    "fontWeight": "bold",
                                    "height": "40px",
                                    "textTransform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                              },
                            },
                          ],
                          "destroy": [Function],
                          "next": Object {
                            "create": [Function],
                            "deps": null,
                            "destroy": undefined,
                            "next": Object {
                              "create": [Function],
                              "deps": Array [
                                undefined,
                              ],
                              "destroy": undefined,
                              "next": [Circular],
                              "tag": 36,
                            },
                            "tag": 192,
                          },
                          "tag": 36,
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "create": [Function],
                            "deps": null,
                            "destroy": undefined,
                            "next": Object {
                              "create": [Function],
                              "deps": Array [
                                undefined,
                              ],
                              "destroy": undefined,
                              "next": Object {
                                "create": [Function],
                                "deps": Array [
                                  StyleSheet {
                                    "attached": true,
                                    "classes": Object {
                                      "buttonGroup": "buttonGroup-0-2-1",
                                      "square": "square-0-2-2",
                                    },
                                    "deployed": true,
                                    "keyframes": Object {},
                                    "options": Object {
                                      "Renderer": [Function],
                                      "classNamePrefix": "",
                                      "classes": Object {
                                        "buttonGroup": "buttonGroup-0-2-1",
                                        "square": "square-0-2-2",
                                      },
                                      "generateId": [Function],
                                      "index": -9007199254740991,
                                      "insertionPoint": undefined,
                                      "jss": Jss {
                                        "generateId": [Function],
                                        "id": 2,
                                        "options": Object {
                                          "Renderer": [Function],
                                          "createGenerateId": [Function],
                                          "id": Object {
                                            "minify": false,
                                          },
                                          "plugins": Array [],
                                        },
                                        "plugins": PluginsRegistry {
                                          "plugins": Object {
                                            "external": Array [
                                              Object {
                                                "onCreateRule": [Function],
                                                "onProcessStyle": [Function],
                                                "onUpdate": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                                "onProcessRule": [Function],
                                              },
                                              Object {
                                                "onProcessRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                                "onProcessRule": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onProcessRule": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onProcessStyle": [Function],
                                              },
                                            ],
                                            "internal": Array [
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onCreateRule": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                            ],
                                          },
                                          "registry": Object {
                                            "onChangeValue": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "onCreateRule": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "onProcessRule": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "onProcessSheet": Array [],
                                            "onProcessStyle": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "onUpdate": Array [
                                              [Function],
                                            ],
                                          },
                                        },
                                        "version": "10.3.0",
                                      },
                                      "keyframes": Object {},
                                      "link": false,
                                      "meta": "Themed",
                                      "parent": [Circular],
                                      "sheet": [Circular],
                                    },
                                    "queue": undefined,
                                    "renderer": DomRenderer {
                                      "element": <style
                                        data-jss=""
                                        data-meta="Themed"
                                      >
                                        
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                      </style>,
                                      "getPropertyValue": [Function],
                                      "hasInsertedRules": false,
                                      "removeProperty": [Function],
                                      "setProperty": [Function],
                                      "setSelector": [Function],
                                      "sheet": [Circular],
                                    },
                                    "rules": RuleList {
                                      "classes": Object {
                                        "buttonGroup": "buttonGroup-0-2-1",
                                        "square": "square-0-2-2",
                                      },
                                      "counter": 0,
                                      "index": Array [
                                        Object {
                                          "display": "flex",
                                          "justify-content": "space-between",
                                          "padding-top": "40px",
                                          "width": "100%",
                                        },
                                        Object {
                                          "background-color": "darkviolet",
                                          "color": "#fff",
                                          "font-weight": "bold",
                                          "height": "40px",
                                          "text-transform": "uppercase",
                                          "width": "49%",
                                        },
                                      ],
                                      "keyframes": Object {},
                                      "map": Object {
                                        ".buttonGroup-0-2-1": Object {
                                          "display": "flex",
                                          "justify-content": "space-between",
                                          "padding-top": "40px",
                                          "width": "100%",
                                        },
                                        ".square-0-2-2": Object {
                                          "background-color": "darkviolet",
                                          "color": "#fff",
                                          "font-weight": "bold",
                                          "height": "40px",
                                          "text-transform": "uppercase",
                                          "width": "49%",
                                        },
                                        "buttonGroup": Object {
                                          "display": "flex",
                                          "justify-content": "space-between",
                                          "padding-top": "40px",
                                          "width": "100%",
                                        },
                                        "square": Object {
                                          "background-color": "darkviolet",
                                          "color": "#fff",
                                          "font-weight": "bold",
                                          "height": "40px",
                                          "text-transform": "uppercase",
                                          "width": "49%",
                                        },
                                      },
                                      "options": Object {
                                        "Renderer": [Function],
                                        "classNamePrefix": "",
                                        "classes": Object {
                                          "buttonGroup": "buttonGroup-0-2-1",
                                          "square": "square-0-2-2",
                                        },
                                        "generateId": [Function],
                                        "index": -9007199254740991,
                                        "insertionPoint": undefined,
                                        "jss": Jss {
                                          "generateId": [Function],
                                          "id": 2,
                                          "options": Object {
                                            "Renderer": [Function],
                                            "createGenerateId": [Function],
                                            "id": Object {
                                              "minify": false,
                                            },
                                            "plugins": Array [],
                                          },
                                          "plugins": PluginsRegistry {
                                            "plugins": Object {
                                              "external": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessStyle": [Function],
                                                  "onUpdate": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                              ],
                                              "internal": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onCreateRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                              ],
                                            },
                                            "registry": Object {
                                              "onChangeValue": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onCreateRule": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onProcessRule": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onProcessSheet": Array [],
                                              "onProcessStyle": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onUpdate": Array [
                                                [Function],
                                              ],
                                            },
                                          },
                                          "version": "10.3.0",
                                        },
                                        "keyframes": Object {},
                                        "link": false,
                                        "meta": "Themed",
                                        "parent": [Circular],
                                        "sheet": [Circular],
                                      },
                                      "raw": Object {
                                        "buttonGroup": Object {
                                          "display": "flex",
                                          "justifyContent": "space-between",
                                          "paddingTop": "40px",
                                          "width": "100%",
                                        },
                                        "square": Object {
                                          "backgroundColor": "darkviolet",
                                          "color": "#fff",
                                          "fontWeight": "bold",
                                          "height": "40px",
                                          "textTransform": "uppercase",
                                          "width": "49%",
                                        },
                                      },
                                    },
                                  },
                                ],
                                "destroy": [Function],
                                "next": [Circular],
                                "tag": 36,
                              },
                              "tag": 36,
                            },
                            "tag": 192,
                          },
                          "next": null,
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": null,
                  },
                  "queue": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "text": "click me",
                  "variant": "round",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 221,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 211,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 213,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 217,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 219,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": [Circular],
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "value": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "value": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 10,
                            "treeBaseDuration": 0,
                            "type": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": [Circular],
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": Object {
                            "expirationTime": 0,
                            "firstContext": Object {
                              "context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": Object {
                                  "$$typeof": Symbol(react.provider),
                                  "_context": [Circular],
                                },
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                              "next": null,
                              "observedBits": 1073741823,
                            },
                            "responders": null,
                          },
                          "effectTag": 1,
                          "elementType": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": [Circular],
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 9,
                          "treeBaseDuration": 0,
                          "type": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": [Circular],
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 208,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 208,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <button>
                              click me
                            </button>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 20,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "text": "click me",
                              "variant": "round",
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <button>
                            click me
                          </button>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 20,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Button
                      onClick={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      text="click me"
                      variant="round"
                    />,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Button
                      onClick={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      text="click me"
                      variant="round"
                    />,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 219,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 217,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": Object {
                        "expirationTime": 0,
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "responders": null,
                      },
                      "effectTag": 1,
                      "elementType": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": [Function],
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 9,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <RootFinder>
                        <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />
                      </RootFinder>,
                      "value": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                        },
                        "palette": Object {
                          "common": Object {
                            "black": "#000",
                            "darkGrey": "#9C8AA5",
                            "darkPurple": "#421C52",
                            "lightGrey": "#BDAEC6",
                            "white": "#fff",
                          },
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "tertiary": Object {
                            "main": "darkviolet",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "primary": "rbga(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "spacing": [Function],
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <RootFinder>
                        <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />
                      </RootFinder>,
                      "value": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                        },
                        "palette": Object {
                          "common": Object {
                            "black": "#000",
                            "darkGrey": "#9C8AA5",
                            "darkPurple": "#421C52",
                            "lightGrey": "#BDAEC6",
                            "white": "#fff",
                          },
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "tertiary": Object {
                            "main": "darkviolet",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "primary": "rbga(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "spacing": [Function],
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 217,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": Object {
                        "expirationTime": 0,
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "responders": null,
                      },
                      "effectTag": 1,
                      "elementType": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": [Function],
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 9,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": RootFinder {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Button
                        onClick={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        text="click me"
                        variant="round"
                      />,
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "lastEffect": Object {
                    "create": [Function],
                    "deps": null,
                    "destroy": undefined,
                    "next": Object {
                      "create": [Function],
                      "deps": Array [
                        undefined,
                      ],
                      "destroy": undefined,
                      "next": Object {
                        "create": [Function],
                        "deps": Array [
                          StyleSheet {
                            "attached": true,
                            "classes": Object {
                              "buttonGroup": "buttonGroup-0-2-1",
                              "square": "square-0-2-2",
                            },
                            "deployed": true,
                            "keyframes": Object {},
                            "options": Object {
                              "Renderer": [Function],
                              "classNamePrefix": "",
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "generateId": [Function],
                              "index": -9007199254740991,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateId": [Function],
                                "id": 2,
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateId": [Function],
                                  "id": Object {
                                    "minify": false,
                                  },
                                  "plugins": Array [],
                                },
                                "plugins": PluginsRegistry {
                                  "plugins": Object {
                                    "external": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                        "onUpdate": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                    ],
                                    "internal": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                    ],
                                  },
                                  "registry": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onUpdate": Array [
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "10.3.0",
                              },
                              "keyframes": Object {},
                              "link": false,
                              "meta": "Themed",
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "queue": undefined,
                            "renderer": DomRenderer {
                              "element": <style
                                data-jss=""
                                data-meta="Themed"
                              >
                                
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                              </style>,
                              "getPropertyValue": [Function],
                              "hasInsertedRules": false,
                              "removeProperty": [Function],
                              "setProperty": [Function],
                              "setSelector": [Function],
                              "sheet": [Circular],
                            },
                            "rules": RuleList {
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "counter": 0,
                              "index": Array [
                                Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                              ],
                              "keyframes": Object {},
                              "map": Object {
                                ".buttonGroup-0-2-1": Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                ".square-0-2-2": Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                                "buttonGroup": Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                "square": Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                              },
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "raw": Object {
                                "buttonGroup": Object {
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "paddingTop": "40px",
                                  "width": "100%",
                                },
                                "square": Object {
                                  "backgroundColor": "darkviolet",
                                  "color": "#fff",
                                  "fontWeight": "bold",
                                  "height": "40px",
                                  "textTransform": "uppercase",
                                  "width": "49%",
                                },
                              },
                            },
                          },
                        ],
                        "destroy": [Function],
                        "next": [Circular],
                        "tag": 36,
                      },
                      "tag": 36,
                    },
                    "tag": 192,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": "button",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "click me",
                "className": null,
                "onClick": [MockFunction] {
                  "calls": [Circular],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "click me",
                "className": null,
                "onClick": [MockFunction] {
                  "calls": [Circular],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": Array [
                  "useRef",
                  "useContext",
                  "useContext",
                  "useMemo",
                  "useLayoutEffect",
                  "useLayoutEffect",
                  "useDebugValue",
                  "useDebugValue",
                  "useEffect",
                ],
                "_debugID": 223,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 211,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 213,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 215,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 217,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 219,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 221,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />,
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": RootFinder {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "children": <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />,
                              },
                              "refs": Object {},
                              "state": null,
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": [Circular],
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "value": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "value": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 10,
                          "treeBaseDuration": 0,
                          "type": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": [Circular],
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": Object {
                          "expirationTime": 0,
                          "firstContext": Object {
                            "context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                            "next": null,
                            "observedBits": 1073741823,
                          },
                          "responders": null,
                        },
                        "effectTag": 1,
                        "elementType": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 9,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                        "theme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                        "theme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": ThemeProvider {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "cachedTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                        "context": Object {},
                        "lastOuterTheme": undefined,
                        "lastTheme": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                        "props": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "refs": Object {},
                        "renderProvider": [Function],
                        "state": null,
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <RootFinder>
                        <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />
                      </RootFinder>,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <RootFinder>
                        <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />
                      </RootFinder>,
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "text": "click me",
                      "variant": "round",
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "memoizedState": Object {
                    "context": null,
                    "mount": true,
                    "props": Object {
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "text": "click me",
                      "variant": "round",
                    },
                    "wrappingComponentProps": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "Component": [Function],
                    "context": null,
                    "props": Object {
                      "onClick": [MockFunction] {
                        "calls": [Circular],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "text": "click me",
                      "variant": "round",
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 208,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 208,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": [Circular],
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 1073741823,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <button>
                            click me
                          </button>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 20,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": null,
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": Object {
                          "callback": null,
                          "expirationTime": 1073741823,
                          "next": null,
                          "nextEffect": null,
                          "payload": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "priority": 97,
                          "suspenseConfig": null,
                          "tag": 0,
                        },
                      },
                    },
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "text": "click me",
                            "variant": "round",
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div>
                        <button>
                          click me
                        </button>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 20,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "text": "click me",
                              "variant": "round",
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "firstCapturedEffect": null,
                      "firstCapturedUpdate": null,
                      "firstEffect": null,
                      "firstUpdate": null,
                      "lastCapturedEffect": null,
                      "lastCapturedUpdate": null,
                      "lastEffect": null,
                      "lastUpdate": null,
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "wrappingComponentProps": null,
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": null,
                      "_currentRenderer2": null,
                      "_currentValue": Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      },
                      "_currentValue2": Object {
                        "classNamePrefix": "",
                        "disableStylesGeneration": false,
                      },
                      "_threadCount": 0,
                    },
                    "next": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 517,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "text": "click me",
                  "variant": "round",
                },
                "memoizedState": Object {
                  "baseState": null,
                  "baseUpdate": null,
                  "memoizedState": Object {
                    "current": false,
                  },
                  "next": Object {
                    "baseState": null,
                    "baseUpdate": null,
                    "memoizedState": Array [
                      Array [
                        StyleSheet {
                          "attached": true,
                          "classes": Object {
                            "buttonGroup": "buttonGroup-0-2-1",
                            "square": "square-0-2-2",
                          },
                          "deployed": true,
                          "keyframes": Object {},
                          "options": Object {
                            "Renderer": [Function],
                            "classNamePrefix": "",
                            "classes": Object {
                              "buttonGroup": "buttonGroup-0-2-1",
                              "square": "square-0-2-2",
                            },
                            "generateId": [Function],
                            "index": -9007199254740991,
                            "insertionPoint": undefined,
                            "jss": Jss {
                              "generateId": [Function],
                              "id": 2,
                              "options": Object {
                                "Renderer": [Function],
                                "createGenerateId": [Function],
                                "id": Object {
                                  "minify": false,
                                },
                                "plugins": Array [],
                              },
                              "plugins": PluginsRegistry {
                                "plugins": Object {
                                  "external": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessStyle": [Function],
                                      "onUpdate": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                      "onProcessRule": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onProcessRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onProcessStyle": [Function],
                                    },
                                  ],
                                  "internal": Array [
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onChangeValue": [Function],
                                      "onCreateRule": [Function],
                                      "onProcessStyle": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                    Object {
                                      "onCreateRule": [Function],
                                    },
                                  ],
                                },
                                "registry": Object {
                                  "onChangeValue": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onCreateRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessRule": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onProcessSheet": Array [],
                                  "onProcessStyle": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                  "onUpdate": Array [
                                    [Function],
                                  ],
                                },
                              },
                              "version": "10.3.0",
                            },
                            "keyframes": Object {},
                            "link": false,
                            "meta": "Themed",
                            "parent": [Circular],
                            "sheet": [Circular],
                          },
                          "queue": undefined,
                          "renderer": DomRenderer {
                            "element": <style
                              data-jss=""
                              data-meta="Themed"
                            >
                              
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                            </style>,
                            "getPropertyValue": [Function],
                            "hasInsertedRules": false,
                            "removeProperty": [Function],
                            "setProperty": [Function],
                            "setSelector": [Function],
                            "sheet": [Circular],
                          },
                          "rules": RuleList {
                            "classes": Object {
                              "buttonGroup": "buttonGroup-0-2-1",
                              "square": "square-0-2-2",
                            },
                            "counter": 0,
                            "index": Array [
                              Object {
                                "display": "flex",
                                "justify-content": "space-between",
                                "padding-top": "40px",
                                "width": "100%",
                              },
                              Object {
                                "background-color": "darkviolet",
                                "color": "#fff",
                                "font-weight": "bold",
                                "height": "40px",
                                "text-transform": "uppercase",
                                "width": "49%",
                              },
                            ],
                            "keyframes": Object {},
                            "map": Object {
                              ".buttonGroup-0-2-1": Object {
                                "display": "flex",
                                "justify-content": "space-between",
                                "padding-top": "40px",
                                "width": "100%",
                              },
                              ".square-0-2-2": Object {
                                "background-color": "darkviolet",
                                "color": "#fff",
                                "font-weight": "bold",
                                "height": "40px",
                                "text-transform": "uppercase",
                                "width": "49%",
                              },
                              "buttonGroup": Object {
                                "display": "flex",
                                "justify-content": "space-between",
                                "padding-top": "40px",
                                "width": "100%",
                              },
                              "square": Object {
                                "background-color": "darkviolet",
                                "color": "#fff",
                                "font-weight": "bold",
                                "height": "40px",
                                "text-transform": "uppercase",
                                "width": "49%",
                              },
                            },
                            "options": Object {
                              "Renderer": [Function],
                              "classNamePrefix": "",
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "generateId": [Function],
                              "index": -9007199254740991,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateId": [Function],
                                "id": 2,
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateId": [Function],
                                  "id": Object {
                                    "minify": false,
                                  },
                                  "plugins": Array [],
                                },
                                "plugins": PluginsRegistry {
                                  "plugins": Object {
                                    "external": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                        "onUpdate": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                    ],
                                    "internal": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                    ],
                                  },
                                  "registry": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onUpdate": Array [
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "10.3.0",
                              },
                              "keyframes": Object {},
                              "link": false,
                              "meta": "Themed",
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "raw": Object {
                              "buttonGroup": Object {
                                "display": "flex",
                                "justifyContent": "space-between",
                                "paddingTop": "40px",
                                "width": "100%",
                              },
                              "square": Object {
                                "backgroundColor": "darkviolet",
                                "color": "#fff",
                                "fontWeight": "bold",
                                "height": "40px",
                                "textTransform": "uppercase",
                                "width": "49%",
                              },
                            },
                          },
                        },
                        Object {},
                      ],
                      Array [
                        Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        },
                        Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      ],
                    ],
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Object {
                        "create": [Function],
                        "deps": Array [
                          undefined,
                        ],
                        "destroy": undefined,
                        "next": Object {
                          "create": [Function],
                          "deps": Array [
                            StyleSheet {
                              "attached": true,
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "deployed": true,
                              "keyframes": Object {},
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "queue": undefined,
                              "renderer": DomRenderer {
                                "element": <style
                                  data-jss=""
                                  data-meta="Themed"
                                >
                                  
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                </style>,
                                "getPropertyValue": [Function],
                                "hasInsertedRules": false,
                                "removeProperty": [Function],
                                "setProperty": [Function],
                                "setSelector": [Function],
                                "sheet": [Circular],
                              },
                              "rules": RuleList {
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "counter": 0,
                                "index": Array [
                                  Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                ],
                                "keyframes": Object {},
                                "map": Object {
                                  ".buttonGroup-0-2-1": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  ".square-0-2-2": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "raw": Object {
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "paddingTop": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "backgroundColor": "darkviolet",
                                    "color": "#fff",
                                    "fontWeight": "bold",
                                    "height": "40px",
                                    "textTransform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                              },
                            },
                          ],
                          "destroy": [Function],
                          "next": Object {
                            "create": [Function],
                            "deps": null,
                            "destroy": undefined,
                            "next": [Circular],
                            "tag": 192,
                          },
                          "tag": 36,
                        },
                        "tag": 36,
                      },
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "create": [Function],
                          "deps": Array [
                            StyleSheet {
                              "attached": true,
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "deployed": true,
                              "keyframes": Object {},
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "queue": undefined,
                              "renderer": DomRenderer {
                                "element": <style
                                  data-jss=""
                                  data-meta="Themed"
                                >
                                  
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                </style>,
                                "getPropertyValue": [Function],
                                "hasInsertedRules": false,
                                "removeProperty": [Function],
                                "setProperty": [Function],
                                "setSelector": [Function],
                                "sheet": [Circular],
                              },
                              "rules": RuleList {
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "counter": 0,
                                "index": Array [
                                  Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                ],
                                "keyframes": Object {},
                                "map": Object {
                                  ".buttonGroup-0-2-1": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  ".square-0-2-2": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "raw": Object {
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "paddingTop": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "backgroundColor": "darkviolet",
                                    "color": "#fff",
                                    "fontWeight": "bold",
                                    "height": "40px",
                                    "textTransform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                              },
                            },
                          ],
                          "destroy": [Function],
                          "next": Object {
                            "create": [Function],
                            "deps": null,
                            "destroy": undefined,
                            "next": Object {
                              "create": [Function],
                              "deps": Array [
                                undefined,
                              ],
                              "destroy": undefined,
                              "next": [Circular],
                              "tag": 36,
                            },
                            "tag": 192,
                          },
                          "tag": 36,
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "create": [Function],
                            "deps": null,
                            "destroy": undefined,
                            "next": Object {
                              "create": [Function],
                              "deps": Array [
                                undefined,
                              ],
                              "destroy": undefined,
                              "next": Object {
                                "create": [Function],
                                "deps": Array [
                                  StyleSheet {
                                    "attached": true,
                                    "classes": Object {
                                      "buttonGroup": "buttonGroup-0-2-1",
                                      "square": "square-0-2-2",
                                    },
                                    "deployed": true,
                                    "keyframes": Object {},
                                    "options": Object {
                                      "Renderer": [Function],
                                      "classNamePrefix": "",
                                      "classes": Object {
                                        "buttonGroup": "buttonGroup-0-2-1",
                                        "square": "square-0-2-2",
                                      },
                                      "generateId": [Function],
                                      "index": -9007199254740991,
                                      "insertionPoint": undefined,
                                      "jss": Jss {
                                        "generateId": [Function],
                                        "id": 2,
                                        "options": Object {
                                          "Renderer": [Function],
                                          "createGenerateId": [Function],
                                          "id": Object {
                                            "minify": false,
                                          },
                                          "plugins": Array [],
                                        },
                                        "plugins": PluginsRegistry {
                                          "plugins": Object {
                                            "external": Array [
                                              Object {
                                                "onCreateRule": [Function],
                                                "onProcessStyle": [Function],
                                                "onUpdate": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                                "onProcessRule": [Function],
                                              },
                                              Object {
                                                "onProcessRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                                "onProcessRule": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onProcessRule": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onProcessStyle": [Function],
                                              },
                                            ],
                                            "internal": Array [
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onChangeValue": [Function],
                                                "onCreateRule": [Function],
                                                "onProcessStyle": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                              Object {
                                                "onCreateRule": [Function],
                                              },
                                            ],
                                          },
                                          "registry": Object {
                                            "onChangeValue": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "onCreateRule": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "onProcessRule": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "onProcessSheet": Array [],
                                            "onProcessStyle": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "onUpdate": Array [
                                              [Function],
                                            ],
                                          },
                                        },
                                        "version": "10.3.0",
                                      },
                                      "keyframes": Object {},
                                      "link": false,
                                      "meta": "Themed",
                                      "parent": [Circular],
                                      "sheet": [Circular],
                                    },
                                    "queue": undefined,
                                    "renderer": DomRenderer {
                                      "element": <style
                                        data-jss=""
                                        data-meta="Themed"
                                      >
                                        
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                      </style>,
                                      "getPropertyValue": [Function],
                                      "hasInsertedRules": false,
                                      "removeProperty": [Function],
                                      "setProperty": [Function],
                                      "setSelector": [Function],
                                      "sheet": [Circular],
                                    },
                                    "rules": RuleList {
                                      "classes": Object {
                                        "buttonGroup": "buttonGroup-0-2-1",
                                        "square": "square-0-2-2",
                                      },
                                      "counter": 0,
                                      "index": Array [
                                        Object {
                                          "display": "flex",
                                          "justify-content": "space-between",
                                          "padding-top": "40px",
                                          "width": "100%",
                                        },
                                        Object {
                                          "background-color": "darkviolet",
                                          "color": "#fff",
                                          "font-weight": "bold",
                                          "height": "40px",
                                          "text-transform": "uppercase",
                                          "width": "49%",
                                        },
                                      ],
                                      "keyframes": Object {},
                                      "map": Object {
                                        ".buttonGroup-0-2-1": Object {
                                          "display": "flex",
                                          "justify-content": "space-between",
                                          "padding-top": "40px",
                                          "width": "100%",
                                        },
                                        ".square-0-2-2": Object {
                                          "background-color": "darkviolet",
                                          "color": "#fff",
                                          "font-weight": "bold",
                                          "height": "40px",
                                          "text-transform": "uppercase",
                                          "width": "49%",
                                        },
                                        "buttonGroup": Object {
                                          "display": "flex",
                                          "justify-content": "space-between",
                                          "padding-top": "40px",
                                          "width": "100%",
                                        },
                                        "square": Object {
                                          "background-color": "darkviolet",
                                          "color": "#fff",
                                          "font-weight": "bold",
                                          "height": "40px",
                                          "text-transform": "uppercase",
                                          "width": "49%",
                                        },
                                      },
                                      "options": Object {
                                        "Renderer": [Function],
                                        "classNamePrefix": "",
                                        "classes": Object {
                                          "buttonGroup": "buttonGroup-0-2-1",
                                          "square": "square-0-2-2",
                                        },
                                        "generateId": [Function],
                                        "index": -9007199254740991,
                                        "insertionPoint": undefined,
                                        "jss": Jss {
                                          "generateId": [Function],
                                          "id": 2,
                                          "options": Object {
                                            "Renderer": [Function],
                                            "createGenerateId": [Function],
                                            "id": Object {
                                              "minify": false,
                                            },
                                            "plugins": Array [],
                                          },
                                          "plugins": PluginsRegistry {
                                            "plugins": Object {
                                              "external": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessStyle": [Function],
                                                  "onUpdate": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                              ],
                                              "internal": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onCreateRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                              ],
                                            },
                                            "registry": Object {
                                              "onChangeValue": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onCreateRule": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onProcessRule": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onProcessSheet": Array [],
                                              "onProcessStyle": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onUpdate": Array [
                                                [Function],
                                              ],
                                            },
                                          },
                                          "version": "10.3.0",
                                        },
                                        "keyframes": Object {},
                                        "link": false,
                                        "meta": "Themed",
                                        "parent": [Circular],
                                        "sheet": [Circular],
                                      },
                                      "raw": Object {
                                        "buttonGroup": Object {
                                          "display": "flex",
                                          "justifyContent": "space-between",
                                          "paddingTop": "40px",
                                          "width": "100%",
                                        },
                                        "square": Object {
                                          "backgroundColor": "darkviolet",
                                          "color": "#fff",
                                          "fontWeight": "bold",
                                          "height": "40px",
                                          "textTransform": "uppercase",
                                          "width": "49%",
                                        },
                                      },
                                    },
                                  },
                                ],
                                "destroy": [Function],
                                "next": [Circular],
                                "tag": 36,
                              },
                              "tag": 36,
                            },
                            "tag": 192,
                          },
                          "next": null,
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": null,
                  },
                  "queue": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "text": "click me",
                  "variant": "round",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 221,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 211,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 213,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 217,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 219,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": [Circular],
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "value": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "value": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 10,
                            "treeBaseDuration": 0,
                            "type": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": [Circular],
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": Object {
                            "expirationTime": 0,
                            "firstContext": Object {
                              "context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": Object {
                                  "$$typeof": Symbol(react.provider),
                                  "_context": [Circular],
                                },
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                              "next": null,
                              "observedBits": 1073741823,
                            },
                            "responders": null,
                          },
                          "effectTag": 1,
                          "elementType": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": [Circular],
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 9,
                          "treeBaseDuration": 0,
                          "type": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": [Circular],
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 208,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 208,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <button>
                              click me
                            </button>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 20,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "text": "click me",
                              "variant": "round",
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <button>
                            click me
                          </button>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 20,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Button
                      onClick={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      text="click me"
                      variant="round"
                    />,
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Button
                      onClick={
                        [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        }
                      }
                      text="click me"
                      variant="round"
                    />,
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 219,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 217,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": Object {
                        "expirationTime": 0,
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "responders": null,
                      },
                      "effectTag": 1,
                      "elementType": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": [Function],
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 9,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <RootFinder>
                        <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />
                      </RootFinder>,
                      "value": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                        },
                        "palette": Object {
                          "common": Object {
                            "black": "#000",
                            "darkGrey": "#9C8AA5",
                            "darkPurple": "#421C52",
                            "lightGrey": "#BDAEC6",
                            "white": "#fff",
                          },
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "tertiary": Object {
                            "main": "darkviolet",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "primary": "rbga(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "spacing": [Function],
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <RootFinder>
                        <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />
                      </RootFinder>,
                      "value": Object {
                        "breakpoints": Object {
                          "between": [Function],
                          "down": [Function],
                          "keys": Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ],
                          "up": [Function],
                          "values": Object {
                            "lg": 1280,
                            "md": 960,
                            "sm": 600,
                            "xl": 1920,
                            "xs": 0,
                          },
                        },
                        "palette": Object {
                          "common": Object {
                            "black": "#000",
                            "darkGrey": "#9C8AA5",
                            "darkPurple": "#421C52",
                            "lightGrey": "#BDAEC6",
                            "white": "#fff",
                          },
                          "grey": Object {
                            "100": "#f5f5f5",
                            "200": "#eeeeee",
                            "300": "#e0e0e0",
                            "400": "#bdbdbd",
                            "50": "#fafafa",
                            "500": "#9e9e9e",
                            "600": "#757575",
                            "700": "#616161",
                            "800": "#424242",
                            "900": "#212121",
                            "A100": "#d5d5d5",
                            "A200": "#aaaaaa",
                            "A400": "#303030",
                            "A700": "#616161",
                          },
                          "primary": Object {
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "tertiary": Object {
                            "main": "darkviolet",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "primary": "rbga(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shadows": Array [
                          "none",
                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                        ],
                        "spacing": [Function],
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 217,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": Object {
                        "expirationTime": 0,
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "responders": null,
                      },
                      "effectTag": 1,
                      "elementType": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": [Function],
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 213,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 211,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "memoizedState": Object {
                              "context": null,
                              "mount": true,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "wrappingComponentProps": null,
                            },
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "Component": [Function],
                              "context": null,
                              "props": Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              },
                              "refProp": null,
                              "wrappingComponentProps": null,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 208,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": [Circular],
                                "child": null,
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 1073741823,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": null,
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": null,
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": Object {
                                    "callback": null,
                                    "expirationTime": 1073741823,
                                    "next": null,
                                    "nextEffect": null,
                                    "payload": Object {
                                      "element": <WrapperComponent
                                        Component={[Function]}
                                        context={null}
                                        props={
                                          Object {
                                            "onClick": [MockFunction] {
                                              "calls": [Circular],
                                              "results": Array [
                                                Object {
                                                  "type": "return",
                                                  "value": undefined,
                                                },
                                              ],
                                            },
                                            "text": "click me",
                                            "variant": "round",
                                          }
                                        }
                                        refProp={null}
                                        wrappingComponentProps={null}
                                      />,
                                    },
                                    "priority": 97,
                                    "suspenseConfig": null,
                                    "tag": 0,
                                  },
                                },
                              },
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": null,
                              "memoizedState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": null,
                              "ref": null,
                              "return": null,
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": FiberRootNode {
                                "callbackExpirationTime": 0,
                                "callbackNode": null,
                                "callbackPriority": 90,
                                "containerInfo": <div>
                                  <button>
                                    click me
                                  </button>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "finishedExpirationTime": 0,
                                "finishedWork": null,
                                "firstPendingTime": 0,
                                "firstSuspendedTime": 0,
                                "hydrate": false,
                                "interactionThreadID": 20,
                                "lastExpiredTime": 0,
                                "lastPingedTime": 0,
                                "lastSuspendedTime": 0,
                                "memoizedInteractions": Set {},
                                "nextKnownPendingLevel": 0,
                                "pendingChildren": null,
                                "pendingContext": null,
                                "pendingInteractionMap": Map {},
                                "pingCache": null,
                                "tag": 0,
                                "timeoutHandle": -1,
                              },
                              "tag": 3,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": Object {
                                "baseState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "firstCapturedEffect": null,
                                "firstCapturedUpdate": null,
                                "firstEffect": null,
                                "firstUpdate": null,
                                "lastCapturedEffect": null,
                                "lastCapturedUpdate": null,
                                "lastEffect": null,
                                "lastUpdate": null,
                              },
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": WrapperComponent {
                              "_reactInternalFiber": [Circular],
                              "_reactInternalInstance": Object {},
                              "context": Object {},
                              "props": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "refs": Object {},
                              "state": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "updater": Object {
                                "enqueueForceUpdate": [Function],
                                "enqueueReplaceState": [Function],
                                "enqueueSetState": [Function],
                                "isMounted": [Function],
                              },
                            },
                            "tag": 1,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 9,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": RootFinder {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Button
                        onClick={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        text="click me"
                        variant="round"
                      />,
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "lastEffect": Object {
                    "create": [Function],
                    "deps": null,
                    "destroy": undefined,
                    "next": Object {
                      "create": [Function],
                      "deps": Array [
                        undefined,
                      ],
                      "destroy": undefined,
                      "next": Object {
                        "create": [Function],
                        "deps": Array [
                          StyleSheet {
                            "attached": true,
                            "classes": Object {
                              "buttonGroup": "buttonGroup-0-2-1",
                              "square": "square-0-2-2",
                            },
                            "deployed": true,
                            "keyframes": Object {},
                            "options": Object {
                              "Renderer": [Function],
                              "classNamePrefix": "",
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "generateId": [Function],
                              "index": -9007199254740991,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateId": [Function],
                                "id": 2,
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateId": [Function],
                                  "id": Object {
                                    "minify": false,
                                  },
                                  "plugins": Array [],
                                },
                                "plugins": PluginsRegistry {
                                  "plugins": Object {
                                    "external": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                        "onUpdate": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                    ],
                                    "internal": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                    ],
                                  },
                                  "registry": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onUpdate": Array [
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "10.3.0",
                              },
                              "keyframes": Object {},
                              "link": false,
                              "meta": "Themed",
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "queue": undefined,
                            "renderer": DomRenderer {
                              "element": <style
                                data-jss=""
                                data-meta="Themed"
                              >
                                
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                              </style>,
                              "getPropertyValue": [Function],
                              "hasInsertedRules": false,
                              "removeProperty": [Function],
                              "setProperty": [Function],
                              "setSelector": [Function],
                              "sheet": [Circular],
                            },
                            "rules": RuleList {
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "counter": 0,
                              "index": Array [
                                Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                              ],
                              "keyframes": Object {},
                              "map": Object {
                                ".buttonGroup-0-2-1": Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                ".square-0-2-2": Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                                "buttonGroup": Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                "square": Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                              },
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "raw": Object {
                                "buttonGroup": Object {
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "paddingTop": "40px",
                                  "width": "100%",
                                },
                                "square": Object {
                                  "backgroundColor": "darkviolet",
                                  "color": "#fff",
                                  "fontWeight": "bold",
                                  "height": "40px",
                                  "textTransform": "uppercase",
                                  "width": "49%",
                                },
                              },
                            },
                          },
                        ],
                        "destroy": [Function],
                        "next": [Circular],
                        "tag": 36,
                      },
                      "tag": 36,
                    },
                    "tag": 192,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <button>
                click me
              </button>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "button",
              "updateQueue": null,
            },
            "bubbles": undefined,
            "cancelable": undefined,
            "currentTarget": null,
            "defaultPrevented": undefined,
            "dispatchConfig": Object {
              "dependencies": Array [
                "click",
              ],
              "eventPriority": 0,
              "phasedRegistrationNames": Object {
                "bubbled": "onClick",
                "captured": "onClickCapture",
              },
            },
            "eventPhase": undefined,
            "isDefaultPrevented": [Function],
            "isPersistent": [Function],
            "isPropagationStopped": [Function],
            "isTrusted": undefined,
            "nativeEvent": Event {
              "target": <button>
                click me
              </button>,
              "type": "click",
            },
            "target": <button>
              click me
            </button>,
            "timeStamp": 1593210362556,
            "type": "click",
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  text="click me"
  variant="round"
>
  <button
    className={null}
    onClick={
      [MockFunction] {
        "calls": Array [
          Array [
            SyntheticEvent {
              "_dispatchInstances": null,
              "_dispatchListeners": null,
              "_targetInst": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 225,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": Array [
                    "useRef",
                    "useContext",
                    "useContext",
                    "useMemo",
                    "useLayoutEffect",
                    "useLayoutEffect",
                    "useDebugValue",
                    "useDebugValue",
                    "useEffect",
                  ],
                  "_debugID": 223,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 211,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 213,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 217,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 219,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 221,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />,
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />,
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": RootFinder {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "children": <Button
                                    onClick={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    text="click me"
                                    variant="round"
                                  />,
                                },
                                "refs": Object {},
                                "state": null,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": [Circular],
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "value": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "value": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 10,
                            "treeBaseDuration": 0,
                            "type": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": [Circular],
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": Object {
                            "expirationTime": 0,
                            "firstContext": Object {
                              "context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": Object {
                                  "$$typeof": Symbol(react.provider),
                                  "_context": [Circular],
                                },
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                              "next": null,
                              "observedBits": 1073741823,
                            },
                            "responders": null,
                          },
                          "effectTag": 1,
                          "elementType": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": [Circular],
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 9,
                          "treeBaseDuration": 0,
                          "type": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": [Circular],
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 208,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 208,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <button>
                              click me
                            </button>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 20,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "text": "click me",
                              "variant": "round",
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <button>
                            click me
                          </button>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 20,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        },
                        "_currentValue2": Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        },
                        "_threadCount": 0,
                      },
                      "next": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 517,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "text": "click me",
                    "variant": "round",
                  },
                  "memoizedState": Object {
                    "baseState": null,
                    "baseUpdate": null,
                    "memoizedState": Object {
                      "current": false,
                    },
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Array [
                        Array [
                          StyleSheet {
                            "attached": true,
                            "classes": Object {
                              "buttonGroup": "buttonGroup-0-2-1",
                              "square": "square-0-2-2",
                            },
                            "deployed": true,
                            "keyframes": Object {},
                            "options": Object {
                              "Renderer": [Function],
                              "classNamePrefix": "",
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "generateId": [Function],
                              "index": -9007199254740991,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateId": [Function],
                                "id": 2,
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateId": [Function],
                                  "id": Object {
                                    "minify": false,
                                  },
                                  "plugins": Array [],
                                },
                                "plugins": PluginsRegistry {
                                  "plugins": Object {
                                    "external": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                        "onUpdate": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                    ],
                                    "internal": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                    ],
                                  },
                                  "registry": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onUpdate": Array [
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "10.3.0",
                              },
                              "keyframes": Object {},
                              "link": false,
                              "meta": "Themed",
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "queue": undefined,
                            "renderer": DomRenderer {
                              "element": <style
                                data-jss=""
                                data-meta="Themed"
                              >
                                
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                              </style>,
                              "getPropertyValue": [Function],
                              "hasInsertedRules": false,
                              "removeProperty": [Function],
                              "setProperty": [Function],
                              "setSelector": [Function],
                              "sheet": [Circular],
                            },
                            "rules": RuleList {
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "counter": 0,
                              "index": Array [
                                Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                              ],
                              "keyframes": Object {},
                              "map": Object {
                                ".buttonGroup-0-2-1": Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                ".square-0-2-2": Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                                "buttonGroup": Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                "square": Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                              },
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "raw": Object {
                                "buttonGroup": Object {
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "paddingTop": "40px",
                                  "width": "100%",
                                },
                                "square": Object {
                                  "backgroundColor": "darkviolet",
                                  "color": "#fff",
                                  "fontWeight": "bold",
                                  "height": "40px",
                                  "textTransform": "uppercase",
                                  "width": "49%",
                                },
                              },
                            },
                          },
                          Object {},
                        ],
                        Array [
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          },
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        ],
                      ],
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "create": [Function],
                          "deps": Array [
                            undefined,
                          ],
                          "destroy": undefined,
                          "next": Object {
                            "create": [Function],
                            "deps": Array [
                              StyleSheet {
                                "attached": true,
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "deployed": true,
                                "keyframes": Object {},
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "queue": undefined,
                                "renderer": DomRenderer {
                                  "element": <style
                                    data-jss=""
                                    data-meta="Themed"
                                  >
                                    
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                  </style>,
                                  "getPropertyValue": [Function],
                                  "hasInsertedRules": false,
                                  "removeProperty": [Function],
                                  "setProperty": [Function],
                                  "setSelector": [Function],
                                  "sheet": [Circular],
                                },
                                "rules": RuleList {
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "counter": 0,
                                  "index": Array [
                                    Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                  ],
                                  "keyframes": Object {},
                                  "map": Object {
                                    ".buttonGroup-0-2-1": Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    ".square-0-2-2": Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                    "buttonGroup": Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    "square": Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                  },
                                  "options": Object {
                                    "Renderer": [Function],
                                    "classNamePrefix": "",
                                    "classes": Object {
                                      "buttonGroup": "buttonGroup-0-2-1",
                                      "square": "square-0-2-2",
                                    },
                                    "generateId": [Function],
                                    "index": -9007199254740991,
                                    "insertionPoint": undefined,
                                    "jss": Jss {
                                      "generateId": [Function],
                                      "id": 2,
                                      "options": Object {
                                        "Renderer": [Function],
                                        "createGenerateId": [Function],
                                        "id": Object {
                                          "minify": false,
                                        },
                                        "plugins": Array [],
                                      },
                                      "plugins": PluginsRegistry {
                                        "plugins": Object {
                                          "external": Array [
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessStyle": [Function],
                                              "onUpdate": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessRule": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                          ],
                                          "internal": Array [
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onCreateRule": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                          ],
                                        },
                                        "registry": Object {
                                          "onChangeValue": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onCreateRule": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onProcessRule": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onProcessSheet": Array [],
                                          "onProcessStyle": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onUpdate": Array [
                                            [Function],
                                          ],
                                        },
                                      },
                                      "version": "10.3.0",
                                    },
                                    "keyframes": Object {},
                                    "link": false,
                                    "meta": "Themed",
                                    "parent": [Circular],
                                    "sheet": [Circular],
                                  },
                                  "raw": Object {
                                    "buttonGroup": Object {
                                      "display": "flex",
                                      "justifyContent": "space-between",
                                      "paddingTop": "40px",
                                      "width": "100%",
                                    },
                                    "square": Object {
                                      "backgroundColor": "darkviolet",
                                      "color": "#fff",
                                      "fontWeight": "bold",
                                      "height": "40px",
                                      "textTransform": "uppercase",
                                      "width": "49%",
                                    },
                                  },
                                },
                              },
                            ],
                            "destroy": [Function],
                            "next": Object {
                              "create": [Function],
                              "deps": null,
                              "destroy": undefined,
                              "next": [Circular],
                              "tag": 192,
                            },
                            "tag": 36,
                          },
                          "tag": 36,
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "create": [Function],
                            "deps": Array [
                              StyleSheet {
                                "attached": true,
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "deployed": true,
                                "keyframes": Object {},
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "queue": undefined,
                                "renderer": DomRenderer {
                                  "element": <style
                                    data-jss=""
                                    data-meta="Themed"
                                  >
                                    
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                  </style>,
                                  "getPropertyValue": [Function],
                                  "hasInsertedRules": false,
                                  "removeProperty": [Function],
                                  "setProperty": [Function],
                                  "setSelector": [Function],
                                  "sheet": [Circular],
                                },
                                "rules": RuleList {
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "counter": 0,
                                  "index": Array [
                                    Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                  ],
                                  "keyframes": Object {},
                                  "map": Object {
                                    ".buttonGroup-0-2-1": Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    ".square-0-2-2": Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                    "buttonGroup": Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    "square": Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                  },
                                  "options": Object {
                                    "Renderer": [Function],
                                    "classNamePrefix": "",
                                    "classes": Object {
                                      "buttonGroup": "buttonGroup-0-2-1",
                                      "square": "square-0-2-2",
                                    },
                                    "generateId": [Function],
                                    "index": -9007199254740991,
                                    "insertionPoint": undefined,
                                    "jss": Jss {
                                      "generateId": [Function],
                                      "id": 2,
                                      "options": Object {
                                        "Renderer": [Function],
                                        "createGenerateId": [Function],
                                        "id": Object {
                                          "minify": false,
                                        },
                                        "plugins": Array [],
                                      },
                                      "plugins": PluginsRegistry {
                                        "plugins": Object {
                                          "external": Array [
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessStyle": [Function],
                                              "onUpdate": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessRule": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                          ],
                                          "internal": Array [
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onCreateRule": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                          ],
                                        },
                                        "registry": Object {
                                          "onChangeValue": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onCreateRule": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onProcessRule": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onProcessSheet": Array [],
                                          "onProcessStyle": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onUpdate": Array [
                                            [Function],
                                          ],
                                        },
                                      },
                                      "version": "10.3.0",
                                    },
                                    "keyframes": Object {},
                                    "link": false,
                                    "meta": "Themed",
                                    "parent": [Circular],
                                    "sheet": [Circular],
                                  },
                                  "raw": Object {
                                    "buttonGroup": Object {
                                      "display": "flex",
                                      "justifyContent": "space-between",
                                      "paddingTop": "40px",
                                      "width": "100%",
                                    },
                                    "square": Object {
                                      "backgroundColor": "darkviolet",
                                      "color": "#fff",
                                      "fontWeight": "bold",
                                      "height": "40px",
                                      "textTransform": "uppercase",
                                      "width": "49%",
                                    },
                                  },
                                },
                              },
                            ],
                            "destroy": [Function],
                            "next": Object {
                              "create": [Function],
                              "deps": null,
                              "destroy": undefined,
                              "next": Object {
                                "create": [Function],
                                "deps": Array [
                                  undefined,
                                ],
                                "destroy": undefined,
                                "next": [Circular],
                                "tag": 36,
                              },
                              "tag": 192,
                            },
                            "tag": 36,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Object {
                              "create": [Function],
                              "deps": null,
                              "destroy": undefined,
                              "next": Object {
                                "create": [Function],
                                "deps": Array [
                                  undefined,
                                ],
                                "destroy": undefined,
                                "next": Object {
                                  "create": [Function],
                                  "deps": Array [
                                    StyleSheet {
                                      "attached": true,
                                      "classes": Object {
                                        "buttonGroup": "buttonGroup-0-2-1",
                                        "square": "square-0-2-2",
                                      },
                                      "deployed": true,
                                      "keyframes": Object {},
                                      "options": Object {
                                        "Renderer": [Function],
                                        "classNamePrefix": "",
                                        "classes": Object {
                                          "buttonGroup": "buttonGroup-0-2-1",
                                          "square": "square-0-2-2",
                                        },
                                        "generateId": [Function],
                                        "index": -9007199254740991,
                                        "insertionPoint": undefined,
                                        "jss": Jss {
                                          "generateId": [Function],
                                          "id": 2,
                                          "options": Object {
                                            "Renderer": [Function],
                                            "createGenerateId": [Function],
                                            "id": Object {
                                              "minify": false,
                                            },
                                            "plugins": Array [],
                                          },
                                          "plugins": PluginsRegistry {
                                            "plugins": Object {
                                              "external": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessStyle": [Function],
                                                  "onUpdate": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                              ],
                                              "internal": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onCreateRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                              ],
                                            },
                                            "registry": Object {
                                              "onChangeValue": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onCreateRule": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onProcessRule": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onProcessSheet": Array [],
                                              "onProcessStyle": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onUpdate": Array [
                                                [Function],
                                              ],
                                            },
                                          },
                                          "version": "10.3.0",
                                        },
                                        "keyframes": Object {},
                                        "link": false,
                                        "meta": "Themed",
                                        "parent": [Circular],
                                        "sheet": [Circular],
                                      },
                                      "queue": undefined,
                                      "renderer": DomRenderer {
                                        "element": <style
                                          data-jss=""
                                          data-meta="Themed"
                                        >
                                          
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                        </style>,
                                        "getPropertyValue": [Function],
                                        "hasInsertedRules": false,
                                        "removeProperty": [Function],
                                        "setProperty": [Function],
                                        "setSelector": [Function],
                                        "sheet": [Circular],
                                      },
                                      "rules": RuleList {
                                        "classes": Object {
                                          "buttonGroup": "buttonGroup-0-2-1",
                                          "square": "square-0-2-2",
                                        },
                                        "counter": 0,
                                        "index": Array [
                                          Object {
                                            "display": "flex",
                                            "justify-content": "space-between",
                                            "padding-top": "40px",
                                            "width": "100%",
                                          },
                                          Object {
                                            "background-color": "darkviolet",
                                            "color": "#fff",
                                            "font-weight": "bold",
                                            "height": "40px",
                                            "text-transform": "uppercase",
                                            "width": "49%",
                                          },
                                        ],
                                        "keyframes": Object {},
                                        "map": Object {
                                          ".buttonGroup-0-2-1": Object {
                                            "display": "flex",
                                            "justify-content": "space-between",
                                            "padding-top": "40px",
                                            "width": "100%",
                                          },
                                          ".square-0-2-2": Object {
                                            "background-color": "darkviolet",
                                            "color": "#fff",
                                            "font-weight": "bold",
                                            "height": "40px",
                                            "text-transform": "uppercase",
                                            "width": "49%",
                                          },
                                          "buttonGroup": Object {
                                            "display": "flex",
                                            "justify-content": "space-between",
                                            "padding-top": "40px",
                                            "width": "100%",
                                          },
                                          "square": Object {
                                            "background-color": "darkviolet",
                                            "color": "#fff",
                                            "font-weight": "bold",
                                            "height": "40px",
                                            "text-transform": "uppercase",
                                            "width": "49%",
                                          },
                                        },
                                        "options": Object {
                                          "Renderer": [Function],
                                          "classNamePrefix": "",
                                          "classes": Object {
                                            "buttonGroup": "buttonGroup-0-2-1",
                                            "square": "square-0-2-2",
                                          },
                                          "generateId": [Function],
                                          "index": -9007199254740991,
                                          "insertionPoint": undefined,
                                          "jss": Jss {
                                            "generateId": [Function],
                                            "id": 2,
                                            "options": Object {
                                              "Renderer": [Function],
                                              "createGenerateId": [Function],
                                              "id": Object {
                                                "minify": false,
                                              },
                                              "plugins": Array [],
                                            },
                                            "plugins": PluginsRegistry {
                                              "plugins": Object {
                                                "external": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessStyle": [Function],
                                                    "onUpdate": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                ],
                                                "internal": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onCreateRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                ],
                                              },
                                              "registry": Object {
                                                "onChangeValue": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onCreateRule": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onProcessRule": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onProcessSheet": Array [],
                                                "onProcessStyle": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onUpdate": Array [
                                                  [Function],
                                                ],
                                              },
                                            },
                                            "version": "10.3.0",
                                          },
                                          "keyframes": Object {},
                                          "link": false,
                                          "meta": "Themed",
                                          "parent": [Circular],
                                          "sheet": [Circular],
                                        },
                                        "raw": Object {
                                          "buttonGroup": Object {
                                            "display": "flex",
                                            "justifyContent": "space-between",
                                            "paddingTop": "40px",
                                            "width": "100%",
                                          },
                                          "square": Object {
                                            "backgroundColor": "darkviolet",
                                            "color": "#fff",
                                            "fontWeight": "bold",
                                            "height": "40px",
                                            "textTransform": "uppercase",
                                            "width": "49%",
                                          },
                                        },
                                      },
                                    },
                                  ],
                                  "destroy": [Function],
                                  "next": [Circular],
                                  "tag": 36,
                                },
                                "tag": 36,
                              },
                              "tag": 192,
                            },
                            "next": null,
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "text": "click me",
                    "variant": "round",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 221,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 211,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 213,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 217,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 219,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": Object {
                                  "$$typeof": Symbol(react.context),
                                  "Consumer": Object {
                                    "$$typeof": Symbol(react.context),
                                    "_calculateChangedBits": null,
                                    "_context": [Circular],
                                  },
                                  "Provider": [Circular],
                                  "_calculateChangedBits": null,
                                  "_currentRenderer": Object {},
                                  "_currentRenderer2": null,
                                  "_currentValue": undefined,
                                  "_currentValue2": undefined,
                                  "_threadCount": 0,
                                },
                              },
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <RootFinder>
                                  <Button
                                    onClick={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    text="click me"
                                    variant="round"
                                  />
                                </RootFinder>,
                                "value": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                  },
                                  "palette": Object {
                                    "common": Object {
                                      "black": "#000",
                                      "darkGrey": "#9C8AA5",
                                      "darkPurple": "#421C52",
                                      "lightGrey": "#BDAEC6",
                                      "white": "#fff",
                                    },
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "tertiary": Object {
                                      "main": "darkviolet",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "primary": "rbga(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "spacing": [Function],
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <RootFinder>
                                  <Button
                                    onClick={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    text="click me"
                                    variant="round"
                                  />
                                </RootFinder>,
                                "value": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                  },
                                  "palette": Object {
                                    "common": Object {
                                      "black": "#000",
                                      "darkGrey": "#9C8AA5",
                                      "darkPurple": "#421C52",
                                      "lightGrey": "#BDAEC6",
                                      "white": "#fff",
                                    },
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "tertiary": Object {
                                      "main": "darkviolet",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "primary": "rbga(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "spacing": [Function],
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "tag": 10,
                              "treeBaseDuration": 0,
                              "type": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": Object {
                                  "$$typeof": Symbol(react.context),
                                  "Consumer": Object {
                                    "$$typeof": Symbol(react.context),
                                    "_calculateChangedBits": null,
                                    "_context": [Circular],
                                  },
                                  "Provider": [Circular],
                                  "_calculateChangedBits": null,
                                  "_currentRenderer": Object {},
                                  "_currentRenderer2": null,
                                  "_currentValue": undefined,
                                  "_currentValue2": undefined,
                                  "_threadCount": 0,
                                },
                              },
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "dependencies": Object {
                              "expirationTime": 0,
                              "firstContext": Object {
                                "context": Object {
                                  "$$typeof": Symbol(react.context),
                                  "Consumer": Object {
                                    "$$typeof": Symbol(react.context),
                                    "_calculateChangedBits": null,
                                    "_context": [Circular],
                                  },
                                  "Provider": Object {
                                    "$$typeof": Symbol(react.provider),
                                    "_context": [Circular],
                                  },
                                  "_calculateChangedBits": null,
                                  "_currentRenderer": Object {},
                                  "_currentRenderer2": null,
                                  "_currentValue": undefined,
                                  "_currentValue2": undefined,
                                  "_threadCount": 0,
                                },
                                "next": null,
                                "observedBits": 1073741823,
                              },
                              "responders": null,
                            },
                            "effectTag": 1,
                            "elementType": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": [Circular],
                                "Provider": Object {
                                  "$$typeof": Symbol(react.provider),
                                  "_context": [Circular],
                                },
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 9,
                            "treeBaseDuration": 0,
                            "type": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": [Circular],
                                "Provider": Object {
                                  "$$typeof": Symbol(react.provider),
                                  "_context": [Circular],
                                },
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 208,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 208,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div>
                              <button>
                                click me
                              </button>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 20,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <button>
                              click me
                            </button>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 20,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "text": "click me",
                            "variant": "round",
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "text": "click me",
                            "variant": "round",
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Button
                        onClick={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        text="click me"
                        variant="round"
                      />,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Button
                        onClick={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        text="click me"
                        variant="round"
                      />,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 219,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 217,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": Object {
                          "expirationTime": 0,
                          "firstContext": Object {
                            "context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                            "next": null,
                            "observedBits": 1073741823,
                          },
                          "responders": null,
                        },
                        "effectTag": 1,
                        "elementType": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": [Function],
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 9,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                        "value": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                        "value": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 217,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": Object {
                          "expirationTime": 0,
                          "firstContext": Object {
                            "context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                            "next": null,
                            "observedBits": 1073741823,
                          },
                          "responders": null,
                        },
                        "effectTag": 1,
                        "elementType": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": [Function],
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 9,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": RootFinder {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "children": <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />,
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "lastEffect": Object {
                      "create": [Function],
                      "deps": null,
                      "destroy": undefined,
                      "next": Object {
                        "create": [Function],
                        "deps": Array [
                          undefined,
                        ],
                        "destroy": undefined,
                        "next": Object {
                          "create": [Function],
                          "deps": Array [
                            StyleSheet {
                              "attached": true,
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "deployed": true,
                              "keyframes": Object {},
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "queue": undefined,
                              "renderer": DomRenderer {
                                "element": <style
                                  data-jss=""
                                  data-meta="Themed"
                                >
                                  
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                </style>,
                                "getPropertyValue": [Function],
                                "hasInsertedRules": false,
                                "removeProperty": [Function],
                                "setProperty": [Function],
                                "setSelector": [Function],
                                "sheet": [Circular],
                              },
                              "rules": RuleList {
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "counter": 0,
                                "index": Array [
                                  Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                ],
                                "keyframes": Object {},
                                "map": Object {
                                  ".buttonGroup-0-2-1": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  ".square-0-2-2": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "raw": Object {
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "paddingTop": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "backgroundColor": "darkviolet",
                                    "color": "#fff",
                                    "fontWeight": "bold",
                                    "height": "40px",
                                    "textTransform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                              },
                            },
                          ],
                          "destroy": [Function],
                          "next": [Circular],
                          "tag": 36,
                        },
                        "tag": 36,
                      },
                      "tag": 192,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "click me",
                  "className": null,
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "click me",
                  "className": null,
                  "onClick": [MockFunction] {
                    "calls": [Circular],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": Array [
                    "useRef",
                    "useContext",
                    "useContext",
                    "useMemo",
                    "useLayoutEffect",
                    "useLayoutEffect",
                    "useDebugValue",
                    "useDebugValue",
                    "useEffect",
                  ],
                  "_debugID": 223,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 211,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 213,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 215,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 217,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 219,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 221,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />,
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />,
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": RootFinder {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "children": <Button
                                    onClick={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    text="click me"
                                    variant="round"
                                  />,
                                },
                                "refs": Object {},
                                "state": null,
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 0,
                            "elementType": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": [Circular],
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "value": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "value": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 10,
                            "treeBaseDuration": 0,
                            "type": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": [Circular],
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": Object {
                            "expirationTime": 0,
                            "firstContext": Object {
                              "context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": Object {
                                  "$$typeof": Symbol(react.context),
                                  "_calculateChangedBits": null,
                                  "_context": [Circular],
                                },
                                "Provider": Object {
                                  "$$typeof": Symbol(react.provider),
                                  "_context": [Circular],
                                },
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                              "next": null,
                              "observedBits": 1073741823,
                            },
                            "responders": null,
                          },
                          "effectTag": 1,
                          "elementType": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": [Circular],
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 9,
                          "treeBaseDuration": 0,
                          "type": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": [Circular],
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                          },
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                          "theme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": ThemeProvider {
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "cachedTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "context": Object {},
                          "lastOuterTheme": undefined,
                          "lastTheme": Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                          "props": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "refs": Object {},
                          "renderProvider": [Function],
                          "state": null,
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 1,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": null,
                      "mount": true,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": null,
                      "props": Object {
                        "onClick": [MockFunction] {
                          "calls": [Circular],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": undefined,
                            },
                          ],
                        },
                        "text": "click me",
                        "variant": "round",
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 208,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 208,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <button>
                              click me
                            </button>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 20,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": null,
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": null,
                            "nextEffect": null,
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={null}
                                props={
                                  Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={null}
                          props={
                            Object {
                              "onClick": [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "text": "click me",
                              "variant": "round",
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div>
                          <button>
                            click me
                          </button>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 20,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "firstCapturedEffect": null,
                        "firstCapturedUpdate": null,
                        "firstEffect": null,
                        "firstUpdate": null,
                        "lastCapturedEffect": null,
                        "lastCapturedUpdate": null,
                        "lastEffect": null,
                        "lastUpdate": null,
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": null,
                        "_currentRenderer2": null,
                        "_currentValue": Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        },
                        "_currentValue2": Object {
                          "classNamePrefix": "",
                          "disableStylesGeneration": false,
                        },
                        "_threadCount": 0,
                      },
                      "next": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 517,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "text": "click me",
                    "variant": "round",
                  },
                  "memoizedState": Object {
                    "baseState": null,
                    "baseUpdate": null,
                    "memoizedState": Object {
                      "current": false,
                    },
                    "next": Object {
                      "baseState": null,
                      "baseUpdate": null,
                      "memoizedState": Array [
                        Array [
                          StyleSheet {
                            "attached": true,
                            "classes": Object {
                              "buttonGroup": "buttonGroup-0-2-1",
                              "square": "square-0-2-2",
                            },
                            "deployed": true,
                            "keyframes": Object {},
                            "options": Object {
                              "Renderer": [Function],
                              "classNamePrefix": "",
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "generateId": [Function],
                              "index": -9007199254740991,
                              "insertionPoint": undefined,
                              "jss": Jss {
                                "generateId": [Function],
                                "id": 2,
                                "options": Object {
                                  "Renderer": [Function],
                                  "createGenerateId": [Function],
                                  "id": Object {
                                    "minify": false,
                                  },
                                  "plugins": Array [],
                                },
                                "plugins": PluginsRegistry {
                                  "plugins": Object {
                                    "external": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                        "onUpdate": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                        "onProcessRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onProcessRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onProcessStyle": [Function],
                                      },
                                    ],
                                    "internal": Array [
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onChangeValue": [Function],
                                        "onCreateRule": [Function],
                                        "onProcessStyle": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                      Object {
                                        "onCreateRule": [Function],
                                      },
                                    ],
                                  },
                                  "registry": Object {
                                    "onChangeValue": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onCreateRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessRule": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onProcessSheet": Array [],
                                    "onProcessStyle": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                    "onUpdate": Array [
                                      [Function],
                                    ],
                                  },
                                },
                                "version": "10.3.0",
                              },
                              "keyframes": Object {},
                              "link": false,
                              "meta": "Themed",
                              "parent": [Circular],
                              "sheet": [Circular],
                            },
                            "queue": undefined,
                            "renderer": DomRenderer {
                              "element": <style
                                data-jss=""
                                data-meta="Themed"
                              >
                                
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                              </style>,
                              "getPropertyValue": [Function],
                              "hasInsertedRules": false,
                              "removeProperty": [Function],
                              "setProperty": [Function],
                              "setSelector": [Function],
                              "sheet": [Circular],
                            },
                            "rules": RuleList {
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "counter": 0,
                              "index": Array [
                                Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                              ],
                              "keyframes": Object {},
                              "map": Object {
                                ".buttonGroup-0-2-1": Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                ".square-0-2-2": Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                                "buttonGroup": Object {
                                  "display": "flex",
                                  "justify-content": "space-between",
                                  "padding-top": "40px",
                                  "width": "100%",
                                },
                                "square": Object {
                                  "background-color": "darkviolet",
                                  "color": "#fff",
                                  "font-weight": "bold",
                                  "height": "40px",
                                  "text-transform": "uppercase",
                                  "width": "49%",
                                },
                              },
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "raw": Object {
                                "buttonGroup": Object {
                                  "display": "flex",
                                  "justifyContent": "space-between",
                                  "paddingTop": "40px",
                                  "width": "100%",
                                },
                                "square": Object {
                                  "backgroundColor": "darkviolet",
                                  "color": "#fff",
                                  "fontWeight": "bold",
                                  "height": "40px",
                                  "textTransform": "uppercase",
                                  "width": "49%",
                                },
                              },
                            },
                          },
                          Object {},
                        ],
                        Array [
                          Object {
                            "classNamePrefix": "",
                            "disableStylesGeneration": false,
                          },
                          Object {
                            "breakpoints": Object {
                              "between": [Function],
                              "down": [Function],
                              "keys": Array [
                                "xs",
                                "sm",
                                "md",
                                "lg",
                                "xl",
                              ],
                              "up": [Function],
                              "values": Object {
                                "lg": 1280,
                                "md": 960,
                                "sm": 600,
                                "xl": 1920,
                                "xs": 0,
                              },
                            },
                            "palette": Object {
                              "common": Object {
                                "black": "#000",
                                "darkGrey": "#9C8AA5",
                                "darkPurple": "#421C52",
                                "lightGrey": "#BDAEC6",
                                "white": "#fff",
                              },
                              "grey": Object {
                                "100": "#f5f5f5",
                                "200": "#eeeeee",
                                "300": "#e0e0e0",
                                "400": "#bdbdbd",
                                "50": "#fafafa",
                                "500": "#9e9e9e",
                                "600": "#757575",
                                "700": "#616161",
                                "800": "#424242",
                                "900": "#212121",
                                "A100": "#d5d5d5",
                                "A200": "#aaaaaa",
                                "A400": "#303030",
                                "A700": "#616161",
                              },
                              "primary": Object {
                                "dark": "#303f9f",
                                "light": "#7986cb",
                                "main": "#3f51b5",
                              },
                              "secondary": Object {
                                "dark": "#c51162",
                                "light": "#ff4081",
                                "main": "#f50057",
                              },
                              "tertiary": Object {
                                "main": "darkviolet",
                              },
                              "text": Object {
                                "disabled": "rgba(0, 0, 0, 0.38)",
                                "divider": "rgba(0, 0, 0, 0.12)",
                                "primary": "rbga(0, 0, 0, 0.87)",
                                "secondary": "rgba(0, 0, 0, 0.54)",
                              },
                            },
                            "shadows": Array [
                              "none",
                              "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                              "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                              "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                            ],
                            "spacing": [Function],
                          },
                        ],
                      ],
                      "next": Object {
                        "baseState": null,
                        "baseUpdate": null,
                        "memoizedState": Object {
                          "create": [Function],
                          "deps": Array [
                            undefined,
                          ],
                          "destroy": undefined,
                          "next": Object {
                            "create": [Function],
                            "deps": Array [
                              StyleSheet {
                                "attached": true,
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "deployed": true,
                                "keyframes": Object {},
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "queue": undefined,
                                "renderer": DomRenderer {
                                  "element": <style
                                    data-jss=""
                                    data-meta="Themed"
                                  >
                                    
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                  </style>,
                                  "getPropertyValue": [Function],
                                  "hasInsertedRules": false,
                                  "removeProperty": [Function],
                                  "setProperty": [Function],
                                  "setSelector": [Function],
                                  "sheet": [Circular],
                                },
                                "rules": RuleList {
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "counter": 0,
                                  "index": Array [
                                    Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                  ],
                                  "keyframes": Object {},
                                  "map": Object {
                                    ".buttonGroup-0-2-1": Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    ".square-0-2-2": Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                    "buttonGroup": Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    "square": Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                  },
                                  "options": Object {
                                    "Renderer": [Function],
                                    "classNamePrefix": "",
                                    "classes": Object {
                                      "buttonGroup": "buttonGroup-0-2-1",
                                      "square": "square-0-2-2",
                                    },
                                    "generateId": [Function],
                                    "index": -9007199254740991,
                                    "insertionPoint": undefined,
                                    "jss": Jss {
                                      "generateId": [Function],
                                      "id": 2,
                                      "options": Object {
                                        "Renderer": [Function],
                                        "createGenerateId": [Function],
                                        "id": Object {
                                          "minify": false,
                                        },
                                        "plugins": Array [],
                                      },
                                      "plugins": PluginsRegistry {
                                        "plugins": Object {
                                          "external": Array [
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessStyle": [Function],
                                              "onUpdate": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessRule": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                          ],
                                          "internal": Array [
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onCreateRule": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                          ],
                                        },
                                        "registry": Object {
                                          "onChangeValue": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onCreateRule": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onProcessRule": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onProcessSheet": Array [],
                                          "onProcessStyle": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onUpdate": Array [
                                            [Function],
                                          ],
                                        },
                                      },
                                      "version": "10.3.0",
                                    },
                                    "keyframes": Object {},
                                    "link": false,
                                    "meta": "Themed",
                                    "parent": [Circular],
                                    "sheet": [Circular],
                                  },
                                  "raw": Object {
                                    "buttonGroup": Object {
                                      "display": "flex",
                                      "justifyContent": "space-between",
                                      "paddingTop": "40px",
                                      "width": "100%",
                                    },
                                    "square": Object {
                                      "backgroundColor": "darkviolet",
                                      "color": "#fff",
                                      "fontWeight": "bold",
                                      "height": "40px",
                                      "textTransform": "uppercase",
                                      "width": "49%",
                                    },
                                  },
                                },
                              },
                            ],
                            "destroy": [Function],
                            "next": Object {
                              "create": [Function],
                              "deps": null,
                              "destroy": undefined,
                              "next": [Circular],
                              "tag": 192,
                            },
                            "tag": 36,
                          },
                          "tag": 36,
                        },
                        "next": Object {
                          "baseState": null,
                          "baseUpdate": null,
                          "memoizedState": Object {
                            "create": [Function],
                            "deps": Array [
                              StyleSheet {
                                "attached": true,
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "deployed": true,
                                "keyframes": Object {},
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "queue": undefined,
                                "renderer": DomRenderer {
                                  "element": <style
                                    data-jss=""
                                    data-meta="Themed"
                                  >
                                    
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                  </style>,
                                  "getPropertyValue": [Function],
                                  "hasInsertedRules": false,
                                  "removeProperty": [Function],
                                  "setProperty": [Function],
                                  "setSelector": [Function],
                                  "sheet": [Circular],
                                },
                                "rules": RuleList {
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "counter": 0,
                                  "index": Array [
                                    Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                  ],
                                  "keyframes": Object {},
                                  "map": Object {
                                    ".buttonGroup-0-2-1": Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    ".square-0-2-2": Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                    "buttonGroup": Object {
                                      "display": "flex",
                                      "justify-content": "space-between",
                                      "padding-top": "40px",
                                      "width": "100%",
                                    },
                                    "square": Object {
                                      "background-color": "darkviolet",
                                      "color": "#fff",
                                      "font-weight": "bold",
                                      "height": "40px",
                                      "text-transform": "uppercase",
                                      "width": "49%",
                                    },
                                  },
                                  "options": Object {
                                    "Renderer": [Function],
                                    "classNamePrefix": "",
                                    "classes": Object {
                                      "buttonGroup": "buttonGroup-0-2-1",
                                      "square": "square-0-2-2",
                                    },
                                    "generateId": [Function],
                                    "index": -9007199254740991,
                                    "insertionPoint": undefined,
                                    "jss": Jss {
                                      "generateId": [Function],
                                      "id": 2,
                                      "options": Object {
                                        "Renderer": [Function],
                                        "createGenerateId": [Function],
                                        "id": Object {
                                          "minify": false,
                                        },
                                        "plugins": Array [],
                                      },
                                      "plugins": PluginsRegistry {
                                        "plugins": Object {
                                          "external": Array [
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessStyle": [Function],
                                              "onUpdate": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                              "onProcessRule": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onProcessRule": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onProcessStyle": [Function],
                                            },
                                          ],
                                          "internal": Array [
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onChangeValue": [Function],
                                              "onCreateRule": [Function],
                                              "onProcessStyle": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                            Object {
                                              "onCreateRule": [Function],
                                            },
                                          ],
                                        },
                                        "registry": Object {
                                          "onChangeValue": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onCreateRule": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onProcessRule": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onProcessSheet": Array [],
                                          "onProcessStyle": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "onUpdate": Array [
                                            [Function],
                                          ],
                                        },
                                      },
                                      "version": "10.3.0",
                                    },
                                    "keyframes": Object {},
                                    "link": false,
                                    "meta": "Themed",
                                    "parent": [Circular],
                                    "sheet": [Circular],
                                  },
                                  "raw": Object {
                                    "buttonGroup": Object {
                                      "display": "flex",
                                      "justifyContent": "space-between",
                                      "paddingTop": "40px",
                                      "width": "100%",
                                    },
                                    "square": Object {
                                      "backgroundColor": "darkviolet",
                                      "color": "#fff",
                                      "fontWeight": "bold",
                                      "height": "40px",
                                      "textTransform": "uppercase",
                                      "width": "49%",
                                    },
                                  },
                                },
                              },
                            ],
                            "destroy": [Function],
                            "next": Object {
                              "create": [Function],
                              "deps": null,
                              "destroy": undefined,
                              "next": Object {
                                "create": [Function],
                                "deps": Array [
                                  undefined,
                                ],
                                "destroy": undefined,
                                "next": [Circular],
                                "tag": 36,
                              },
                              "tag": 192,
                            },
                            "tag": 36,
                          },
                          "next": Object {
                            "baseState": null,
                            "baseUpdate": null,
                            "memoizedState": Object {
                              "create": [Function],
                              "deps": null,
                              "destroy": undefined,
                              "next": Object {
                                "create": [Function],
                                "deps": Array [
                                  undefined,
                                ],
                                "destroy": undefined,
                                "next": Object {
                                  "create": [Function],
                                  "deps": Array [
                                    StyleSheet {
                                      "attached": true,
                                      "classes": Object {
                                        "buttonGroup": "buttonGroup-0-2-1",
                                        "square": "square-0-2-2",
                                      },
                                      "deployed": true,
                                      "keyframes": Object {},
                                      "options": Object {
                                        "Renderer": [Function],
                                        "classNamePrefix": "",
                                        "classes": Object {
                                          "buttonGroup": "buttonGroup-0-2-1",
                                          "square": "square-0-2-2",
                                        },
                                        "generateId": [Function],
                                        "index": -9007199254740991,
                                        "insertionPoint": undefined,
                                        "jss": Jss {
                                          "generateId": [Function],
                                          "id": 2,
                                          "options": Object {
                                            "Renderer": [Function],
                                            "createGenerateId": [Function],
                                            "id": Object {
                                              "minify": false,
                                            },
                                            "plugins": Array [],
                                          },
                                          "plugins": PluginsRegistry {
                                            "plugins": Object {
                                              "external": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessStyle": [Function],
                                                  "onUpdate": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                  "onProcessRule": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onProcessRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onProcessStyle": [Function],
                                                },
                                              ],
                                              "internal": Array [
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onChangeValue": [Function],
                                                  "onCreateRule": [Function],
                                                  "onProcessStyle": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                                Object {
                                                  "onCreateRule": [Function],
                                                },
                                              ],
                                            },
                                            "registry": Object {
                                              "onChangeValue": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onCreateRule": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onProcessRule": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onProcessSheet": Array [],
                                              "onProcessStyle": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                              ],
                                              "onUpdate": Array [
                                                [Function],
                                              ],
                                            },
                                          },
                                          "version": "10.3.0",
                                        },
                                        "keyframes": Object {},
                                        "link": false,
                                        "meta": "Themed",
                                        "parent": [Circular],
                                        "sheet": [Circular],
                                      },
                                      "queue": undefined,
                                      "renderer": DomRenderer {
                                        "element": <style
                                          data-jss=""
                                          data-meta="Themed"
                                        >
                                          
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                        </style>,
                                        "getPropertyValue": [Function],
                                        "hasInsertedRules": false,
                                        "removeProperty": [Function],
                                        "setProperty": [Function],
                                        "setSelector": [Function],
                                        "sheet": [Circular],
                                      },
                                      "rules": RuleList {
                                        "classes": Object {
                                          "buttonGroup": "buttonGroup-0-2-1",
                                          "square": "square-0-2-2",
                                        },
                                        "counter": 0,
                                        "index": Array [
                                          Object {
                                            "display": "flex",
                                            "justify-content": "space-between",
                                            "padding-top": "40px",
                                            "width": "100%",
                                          },
                                          Object {
                                            "background-color": "darkviolet",
                                            "color": "#fff",
                                            "font-weight": "bold",
                                            "height": "40px",
                                            "text-transform": "uppercase",
                                            "width": "49%",
                                          },
                                        ],
                                        "keyframes": Object {},
                                        "map": Object {
                                          ".buttonGroup-0-2-1": Object {
                                            "display": "flex",
                                            "justify-content": "space-between",
                                            "padding-top": "40px",
                                            "width": "100%",
                                          },
                                          ".square-0-2-2": Object {
                                            "background-color": "darkviolet",
                                            "color": "#fff",
                                            "font-weight": "bold",
                                            "height": "40px",
                                            "text-transform": "uppercase",
                                            "width": "49%",
                                          },
                                          "buttonGroup": Object {
                                            "display": "flex",
                                            "justify-content": "space-between",
                                            "padding-top": "40px",
                                            "width": "100%",
                                          },
                                          "square": Object {
                                            "background-color": "darkviolet",
                                            "color": "#fff",
                                            "font-weight": "bold",
                                            "height": "40px",
                                            "text-transform": "uppercase",
                                            "width": "49%",
                                          },
                                        },
                                        "options": Object {
                                          "Renderer": [Function],
                                          "classNamePrefix": "",
                                          "classes": Object {
                                            "buttonGroup": "buttonGroup-0-2-1",
                                            "square": "square-0-2-2",
                                          },
                                          "generateId": [Function],
                                          "index": -9007199254740991,
                                          "insertionPoint": undefined,
                                          "jss": Jss {
                                            "generateId": [Function],
                                            "id": 2,
                                            "options": Object {
                                              "Renderer": [Function],
                                              "createGenerateId": [Function],
                                              "id": Object {
                                                "minify": false,
                                              },
                                              "plugins": Array [],
                                            },
                                            "plugins": PluginsRegistry {
                                              "plugins": Object {
                                                "external": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessStyle": [Function],
                                                    "onUpdate": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                    "onProcessRule": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onProcessRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onProcessStyle": [Function],
                                                  },
                                                ],
                                                "internal": Array [
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onChangeValue": [Function],
                                                    "onCreateRule": [Function],
                                                    "onProcessStyle": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                  Object {
                                                    "onCreateRule": [Function],
                                                  },
                                                ],
                                              },
                                              "registry": Object {
                                                "onChangeValue": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onCreateRule": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onProcessRule": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onProcessSheet": Array [],
                                                "onProcessStyle": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "onUpdate": Array [
                                                  [Function],
                                                ],
                                              },
                                            },
                                            "version": "10.3.0",
                                          },
                                          "keyframes": Object {},
                                          "link": false,
                                          "meta": "Themed",
                                          "parent": [Circular],
                                          "sheet": [Circular],
                                        },
                                        "raw": Object {
                                          "buttonGroup": Object {
                                            "display": "flex",
                                            "justifyContent": "space-between",
                                            "paddingTop": "40px",
                                            "width": "100%",
                                          },
                                          "square": Object {
                                            "backgroundColor": "darkviolet",
                                            "color": "#fff",
                                            "fontWeight": "bold",
                                            "height": "40px",
                                            "textTransform": "uppercase",
                                            "width": "49%",
                                          },
                                        },
                                      },
                                    },
                                  ],
                                  "destroy": [Function],
                                  "next": [Circular],
                                  "tag": 36,
                                },
                                "tag": 36,
                              },
                              "tag": 192,
                            },
                            "next": null,
                            "queue": null,
                          },
                          "queue": null,
                        },
                        "queue": null,
                      },
                      "queue": null,
                    },
                    "queue": null,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "onClick": [MockFunction] {
                      "calls": [Circular],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "text": "click me",
                    "variant": "round",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 221,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 211,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 213,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": [Circular],
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 217,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": [Circular],
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 219,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": [Circular],
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 0,
                              "elementType": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": Object {
                                  "$$typeof": Symbol(react.context),
                                  "Consumer": Object {
                                    "$$typeof": Symbol(react.context),
                                    "_calculateChangedBits": null,
                                    "_context": [Circular],
                                  },
                                  "Provider": [Circular],
                                  "_calculateChangedBits": null,
                                  "_currentRenderer": Object {},
                                  "_currentRenderer2": null,
                                  "_currentValue": undefined,
                                  "_currentValue2": undefined,
                                  "_threadCount": 0,
                                },
                              },
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "children": <RootFinder>
                                  <Button
                                    onClick={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    text="click me"
                                    variant="round"
                                  />
                                </RootFinder>,
                                "value": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                  },
                                  "palette": Object {
                                    "common": Object {
                                      "black": "#000",
                                      "darkGrey": "#9C8AA5",
                                      "darkPurple": "#421C52",
                                      "lightGrey": "#BDAEC6",
                                      "white": "#fff",
                                    },
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "tertiary": Object {
                                      "main": "darkviolet",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "primary": "rbga(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "spacing": [Function],
                                },
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <RootFinder>
                                  <Button
                                    onClick={
                                      [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      }
                                    }
                                    text="click me"
                                    variant="round"
                                  />
                                </RootFinder>,
                                "value": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                  },
                                  "palette": Object {
                                    "common": Object {
                                      "black": "#000",
                                      "darkGrey": "#9C8AA5",
                                      "darkPurple": "#421C52",
                                      "lightGrey": "#BDAEC6",
                                      "white": "#fff",
                                    },
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "tertiary": Object {
                                      "main": "darkviolet",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "divider": "rgba(0, 0, 0, 0.12)",
                                      "primary": "rbga(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                  },
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "spacing": [Function],
                                },
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "tag": 10,
                              "treeBaseDuration": 0,
                              "type": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": Object {
                                  "$$typeof": Symbol(react.context),
                                  "Consumer": Object {
                                    "$$typeof": Symbol(react.context),
                                    "_calculateChangedBits": null,
                                    "_context": [Circular],
                                  },
                                  "Provider": [Circular],
                                  "_calculateChangedBits": null,
                                  "_currentRenderer": Object {},
                                  "_currentRenderer2": null,
                                  "_currentValue": undefined,
                                  "_currentValue2": undefined,
                                  "_threadCount": 0,
                                },
                              },
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "dependencies": Object {
                              "expirationTime": 0,
                              "firstContext": Object {
                                "context": Object {
                                  "$$typeof": Symbol(react.context),
                                  "Consumer": Object {
                                    "$$typeof": Symbol(react.context),
                                    "_calculateChangedBits": null,
                                    "_context": [Circular],
                                  },
                                  "Provider": Object {
                                    "$$typeof": Symbol(react.provider),
                                    "_context": [Circular],
                                  },
                                  "_calculateChangedBits": null,
                                  "_currentRenderer": Object {},
                                  "_currentRenderer2": null,
                                  "_currentValue": undefined,
                                  "_currentValue2": undefined,
                                  "_threadCount": 0,
                                },
                                "next": null,
                                "observedBits": 1073741823,
                              },
                              "responders": null,
                            },
                            "effectTag": 1,
                            "elementType": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": [Circular],
                                "Provider": Object {
                                  "$$typeof": Symbol(react.provider),
                                  "_context": [Circular],
                                },
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 9,
                            "treeBaseDuration": 0,
                            "type": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": Object {
                                "$$typeof": Symbol(react.context),
                                "Consumer": [Circular],
                                "Provider": Object {
                                  "$$typeof": Symbol(react.provider),
                                  "_context": [Circular],
                                },
                                "_calculateChangedBits": null,
                                "_currentRenderer": Object {},
                                "_currentRenderer2": null,
                                "_currentValue": undefined,
                                "_currentValue2": undefined,
                                "_threadCount": 0,
                              },
                            },
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <RootFinder>
                            <Button
                              onClick={
                                [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                }
                              }
                              text="click me"
                              variant="round"
                            />
                          </RootFinder>,
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": null,
                        "mount": true,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": null,
                        "props": Object {
                          "onClick": [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "text": "click me",
                          "variant": "round",
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 208,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 208,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div>
                              <button>
                                click me
                              </button>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 20,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseState": null,
                            "firstCapturedEffect": null,
                            "firstCapturedUpdate": null,
                            "firstEffect": null,
                            "firstUpdate": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "lastCapturedEffect": null,
                            "lastCapturedUpdate": null,
                            "lastEffect": null,
                            "lastUpdate": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": null,
                              "nextEffect": null,
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={null}
                                  props={
                                    Object {
                                      "onClick": [MockFunction] {
                                        "calls": [Circular],
                                        "results": Array [
                                          Object {
                                            "type": "return",
                                            "value": undefined,
                                          },
                                        ],
                                      },
                                      "text": "click me",
                                      "variant": "round",
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={null}
                            props={
                              Object {
                                "onClick": [MockFunction] {
                                  "calls": [Circular],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": undefined,
                                    },
                                  ],
                                },
                                "text": "click me",
                                "variant": "round",
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div>
                            <button>
                              click me
                            </button>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 20,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={null}
                              props={
                                Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "firstCapturedEffect": null,
                          "firstCapturedUpdate": null,
                          "firstEffect": null,
                          "firstUpdate": null,
                          "lastCapturedEffect": null,
                          "lastCapturedUpdate": null,
                          "lastEffect": null,
                          "lastUpdate": null,
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": null,
                          "props": Object {
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "text": "click me",
                            "variant": "round",
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": null,
                          "mount": true,
                          "props": Object {
                            "onClick": [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            },
                            "text": "click me",
                            "variant": "round",
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Button
                        onClick={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        text="click me"
                        variant="round"
                      />,
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Button
                        onClick={
                          [MockFunction] {
                            "calls": [Circular],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          }
                        }
                        text="click me"
                        variant="round"
                      />,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 219,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 217,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": Object {
                          "expirationTime": 0,
                          "firstContext": Object {
                            "context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                            "next": null,
                            "observedBits": 1073741823,
                          },
                          "responders": null,
                        },
                        "effectTag": 1,
                        "elementType": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": [Function],
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 9,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                        "value": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <RootFinder>
                          <Button
                            onClick={
                              [MockFunction] {
                                "calls": [Circular],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              }
                            }
                            text="click me"
                            variant="round"
                          />
                        </RootFinder>,
                        "value": Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                          },
                          "palette": Object {
                            "common": Object {
                              "black": "#000",
                              "darkGrey": "#9C8AA5",
                              "darkPurple": "#421C52",
                              "lightGrey": "#BDAEC6",
                              "white": "#fff",
                            },
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "tertiary": Object {
                              "main": "darkviolet",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "divider": "rgba(0, 0, 0, 0.12)",
                              "primary": "rbga(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                          },
                          "shadows": Array [
                            "none",
                            "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                            "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                            "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "spacing": [Function],
                        },
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 217,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": Object {
                          "expirationTime": 0,
                          "firstContext": Object {
                            "context": Object {
                              "$$typeof": Symbol(react.context),
                              "Consumer": Object {
                                "$$typeof": Symbol(react.context),
                                "_calculateChangedBits": null,
                                "_context": [Circular],
                              },
                              "Provider": Object {
                                "$$typeof": Symbol(react.provider),
                                "_context": [Circular],
                              },
                              "_calculateChangedBits": null,
                              "_currentRenderer": Object {},
                              "_currentRenderer2": null,
                              "_currentValue": undefined,
                              "_currentValue2": undefined,
                              "_threadCount": 0,
                            },
                            "next": null,
                            "observedBits": 1073741823,
                          },
                          "responders": null,
                        },
                        "effectTag": 1,
                        "elementType": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "children": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": [Function],
                        },
                        "ref": null,
                        "return": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 215,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": [Circular],
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <RootFinder>
                              <Button
                                onClick={
                                  [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  }
                                }
                                text="click me"
                                variant="round"
                              />
                            </RootFinder>,
                            "theme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                          },
                          "ref": null,
                          "return": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 213,
                            "_debugIsCurrentlyTiming": false,
                            "_debugNeedsRemount": false,
                            "_debugOwner": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": [Circular],
                            "childExpirationTime": 0,
                            "dependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                            },
                            "ref": null,
                            "return": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 211,
                              "_debugIsCurrentlyTiming": false,
                              "_debugNeedsRemount": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": [Circular],
                              "childExpirationTime": 0,
                              "dependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": [Circular],
                              "index": 0,
                              "key": null,
                              "lastEffect": [Circular],
                              "memoizedProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "memoizedState": Object {
                                "context": null,
                                "mount": true,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "wrappingComponentProps": null,
                              },
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "Component": [Function],
                                "context": null,
                                "props": Object {
                                  "onClick": [MockFunction] {
                                    "calls": [Circular],
                                    "results": Array [
                                      Object {
                                        "type": "return",
                                        "value": undefined,
                                      },
                                    ],
                                  },
                                  "text": "click me",
                                  "variant": "round",
                                },
                                "refProp": null,
                                "wrappingComponentProps": null,
                              },
                              "ref": null,
                              "return": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 208,
                                "_debugIsCurrentlyTiming": false,
                                "_debugNeedsRemount": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 208,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugNeedsRemount": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": [Circular],
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "dependencies": null,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 1073741823,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": null,
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": null,
                                  "ref": null,
                                  "return": null,
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": FiberRootNode {
                                    "callbackExpirationTime": 0,
                                    "callbackNode": null,
                                    "callbackPriority": 90,
                                    "containerInfo": <div>
                                      <button>
                                        click me
                                      </button>
                                    </div>,
                                    "context": Object {},
                                    "current": [Circular],
                                    "finishedExpirationTime": 0,
                                    "finishedWork": null,
                                    "firstPendingTime": 0,
                                    "firstSuspendedTime": 0,
                                    "hydrate": false,
                                    "interactionThreadID": 20,
                                    "lastExpiredTime": 0,
                                    "lastPingedTime": 0,
                                    "lastSuspendedTime": 0,
                                    "memoizedInteractions": Set {},
                                    "nextKnownPendingLevel": 0,
                                    "pendingChildren": null,
                                    "pendingContext": null,
                                    "pendingInteractionMap": Map {},
                                    "pingCache": null,
                                    "tag": 0,
                                    "timeoutHandle": -1,
                                  },
                                  "tag": 3,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": Object {
                                    "baseState": null,
                                    "firstCapturedEffect": null,
                                    "firstCapturedUpdate": null,
                                    "firstEffect": null,
                                    "firstUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                    "lastCapturedEffect": null,
                                    "lastCapturedUpdate": null,
                                    "lastEffect": null,
                                    "lastUpdate": Object {
                                      "callback": null,
                                      "expirationTime": 1073741823,
                                      "next": null,
                                      "nextEffect": null,
                                      "payload": Object {
                                        "element": <WrapperComponent
                                          Component={[Function]}
                                          context={null}
                                          props={
                                            Object {
                                              "onClick": [MockFunction] {
                                                "calls": [Circular],
                                                "results": Array [
                                                  Object {
                                                    "type": "return",
                                                    "value": undefined,
                                                  },
                                                ],
                                              },
                                              "text": "click me",
                                              "variant": "round",
                                            }
                                          }
                                          refProp={null}
                                          wrappingComponentProps={null}
                                        />,
                                      },
                                      "priority": 97,
                                      "suspenseConfig": null,
                                      "tag": 0,
                                    },
                                  },
                                },
                                "child": [Circular],
                                "childExpirationTime": 0,
                                "dependencies": null,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstEffect": [Circular],
                                "index": 0,
                                "key": null,
                                "lastEffect": [Circular],
                                "memoizedProps": null,
                                "memoizedState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={null}
                                    props={
                                      Object {
                                        "onClick": [MockFunction] {
                                          "calls": [Circular],
                                          "results": Array [
                                            Object {
                                              "type": "return",
                                              "value": undefined,
                                            },
                                          ],
                                        },
                                        "text": "click me",
                                        "variant": "round",
                                      }
                                    }
                                    refProp={null}
                                    wrappingComponentProps={null}
                                  />,
                                },
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": null,
                                "ref": null,
                                "return": null,
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": FiberRootNode {
                                  "callbackExpirationTime": 0,
                                  "callbackNode": null,
                                  "callbackPriority": 90,
                                  "containerInfo": <div>
                                    <button>
                                      click me
                                    </button>
                                  </div>,
                                  "context": Object {},
                                  "current": [Circular],
                                  "finishedExpirationTime": 0,
                                  "finishedWork": null,
                                  "firstPendingTime": 0,
                                  "firstSuspendedTime": 0,
                                  "hydrate": false,
                                  "interactionThreadID": 20,
                                  "lastExpiredTime": 0,
                                  "lastPingedTime": 0,
                                  "lastSuspendedTime": 0,
                                  "memoizedInteractions": Set {},
                                  "nextKnownPendingLevel": 0,
                                  "pendingChildren": null,
                                  "pendingContext": null,
                                  "pendingInteractionMap": Map {},
                                  "pingCache": null,
                                  "tag": 0,
                                  "timeoutHandle": -1,
                                },
                                "tag": 3,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": Object {
                                  "baseState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={null}
                                      props={
                                        Object {
                                          "onClick": [MockFunction] {
                                            "calls": [Circular],
                                            "results": Array [
                                              Object {
                                                "type": "return",
                                                "value": undefined,
                                              },
                                            ],
                                          },
                                          "text": "click me",
                                          "variant": "round",
                                        }
                                      }
                                      refProp={null}
                                      wrappingComponentProps={null}
                                    />,
                                  },
                                  "firstCapturedEffect": null,
                                  "firstCapturedUpdate": null,
                                  "firstEffect": null,
                                  "firstUpdate": null,
                                  "lastCapturedEffect": null,
                                  "lastCapturedUpdate": null,
                                  "lastEffect": null,
                                  "lastUpdate": null,
                                },
                              },
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": WrapperComponent {
                                "_reactInternalFiber": [Circular],
                                "_reactInternalInstance": Object {},
                                "context": Object {},
                                "props": Object {
                                  "Component": [Function],
                                  "context": null,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "refProp": null,
                                  "wrappingComponentProps": null,
                                },
                                "refs": Object {},
                                "state": Object {
                                  "context": null,
                                  "mount": true,
                                  "props": Object {
                                    "onClick": [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    },
                                    "text": "click me",
                                    "variant": "round",
                                  },
                                  "wrappingComponentProps": null,
                                },
                                "updater": Object {
                                  "enqueueForceUpdate": [Function],
                                  "enqueueReplaceState": [Function],
                                  "enqueueSetState": [Function],
                                  "isMounted": [Function],
                                },
                              },
                              "tag": 1,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": ThemeProvider {
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "cachedTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "context": Object {},
                            "lastOuterTheme": undefined,
                            "lastTheme": Object {
                              "breakpoints": Object {
                                "between": [Function],
                                "down": [Function],
                                "keys": Array [
                                  "xs",
                                  "sm",
                                  "md",
                                  "lg",
                                  "xl",
                                ],
                                "up": [Function],
                                "values": Object {
                                  "lg": 1280,
                                  "md": 960,
                                  "sm": 600,
                                  "xl": 1920,
                                  "xs": 0,
                                },
                              },
                              "palette": Object {
                                "common": Object {
                                  "black": "#000",
                                  "darkGrey": "#9C8AA5",
                                  "darkPurple": "#421C52",
                                  "lightGrey": "#BDAEC6",
                                  "white": "#fff",
                                },
                                "grey": Object {
                                  "100": "#f5f5f5",
                                  "200": "#eeeeee",
                                  "300": "#e0e0e0",
                                  "400": "#bdbdbd",
                                  "50": "#fafafa",
                                  "500": "#9e9e9e",
                                  "600": "#757575",
                                  "700": "#616161",
                                  "800": "#424242",
                                  "900": "#212121",
                                  "A100": "#d5d5d5",
                                  "A200": "#aaaaaa",
                                  "A400": "#303030",
                                  "A700": "#616161",
                                },
                                "primary": Object {
                                  "dark": "#303f9f",
                                  "light": "#7986cb",
                                  "main": "#3f51b5",
                                },
                                "secondary": Object {
                                  "dark": "#c51162",
                                  "light": "#ff4081",
                                  "main": "#f50057",
                                },
                                "tertiary": Object {
                                  "main": "darkviolet",
                                },
                                "text": Object {
                                  "disabled": "rgba(0, 0, 0, 0.38)",
                                  "divider": "rgba(0, 0, 0, 0.12)",
                                  "primary": "rbga(0, 0, 0, 0.87)",
                                  "secondary": "rgba(0, 0, 0, 0.54)",
                                },
                              },
                              "shadows": Array [
                                "none",
                                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                              ],
                              "spacing": [Function],
                            },
                            "props": Object {
                              "children": <RootFinder>
                                <Button
                                  onClick={
                                    [MockFunction] {
                                      "calls": [Circular],
                                      "results": Array [
                                        Object {
                                          "type": "return",
                                          "value": undefined,
                                        },
                                      ],
                                    }
                                  }
                                  text="click me"
                                  variant="round"
                                />
                              </RootFinder>,
                              "theme": Object {
                                "breakpoints": Object {
                                  "between": [Function],
                                  "down": [Function],
                                  "keys": Array [
                                    "xs",
                                    "sm",
                                    "md",
                                    "lg",
                                    "xl",
                                  ],
                                  "up": [Function],
                                  "values": Object {
                                    "lg": 1280,
                                    "md": 960,
                                    "sm": 600,
                                    "xl": 1920,
                                    "xs": 0,
                                  },
                                },
                                "palette": Object {
                                  "common": Object {
                                    "black": "#000",
                                    "darkGrey": "#9C8AA5",
                                    "darkPurple": "#421C52",
                                    "lightGrey": "#BDAEC6",
                                    "white": "#fff",
                                  },
                                  "grey": Object {
                                    "100": "#f5f5f5",
                                    "200": "#eeeeee",
                                    "300": "#e0e0e0",
                                    "400": "#bdbdbd",
                                    "50": "#fafafa",
                                    "500": "#9e9e9e",
                                    "600": "#757575",
                                    "700": "#616161",
                                    "800": "#424242",
                                    "900": "#212121",
                                    "A100": "#d5d5d5",
                                    "A200": "#aaaaaa",
                                    "A400": "#303030",
                                    "A700": "#616161",
                                  },
                                  "primary": Object {
                                    "dark": "#303f9f",
                                    "light": "#7986cb",
                                    "main": "#3f51b5",
                                  },
                                  "secondary": Object {
                                    "dark": "#c51162",
                                    "light": "#ff4081",
                                    "main": "#f50057",
                                  },
                                  "tertiary": Object {
                                    "main": "darkviolet",
                                  },
                                  "text": Object {
                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "primary": "rbga(0, 0, 0, 0.87)",
                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                  },
                                },
                                "shadows": Array [
                                  "none",
                                  "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                ],
                                "spacing": [Function],
                              },
                            },
                            "refs": Object {},
                            "renderProvider": [Function],
                            "state": null,
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 1,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 9,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": [Circular],
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                          },
                        },
                        "updateQueue": null,
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                        },
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": RootFinder {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "children": <Button
                          onClick={
                            [MockFunction] {
                              "calls": [Circular],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": undefined,
                                },
                              ],
                            }
                          }
                          text="click me"
                          variant="round"
                        />,
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "lastEffect": Object {
                      "create": [Function],
                      "deps": null,
                      "destroy": undefined,
                      "next": Object {
                        "create": [Function],
                        "deps": Array [
                          undefined,
                        ],
                        "destroy": undefined,
                        "next": Object {
                          "create": [Function],
                          "deps": Array [
                            StyleSheet {
                              "attached": true,
                              "classes": Object {
                                "buttonGroup": "buttonGroup-0-2-1",
                                "square": "square-0-2-2",
                              },
                              "deployed": true,
                              "keyframes": Object {},
                              "options": Object {
                                "Renderer": [Function],
                                "classNamePrefix": "",
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "generateId": [Function],
                                "index": -9007199254740991,
                                "insertionPoint": undefined,
                                "jss": Jss {
                                  "generateId": [Function],
                                  "id": 2,
                                  "options": Object {
                                    "Renderer": [Function],
                                    "createGenerateId": [Function],
                                    "id": Object {
                                      "minify": false,
                                    },
                                    "plugins": Array [],
                                  },
                                  "plugins": PluginsRegistry {
                                    "plugins": Object {
                                      "external": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                          "onUpdate": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                          "onProcessRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onProcessRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onProcessStyle": [Function],
                                        },
                                      ],
                                      "internal": Array [
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onChangeValue": [Function],
                                          "onCreateRule": [Function],
                                          "onProcessStyle": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                        Object {
                                          "onCreateRule": [Function],
                                        },
                                      ],
                                    },
                                    "registry": Object {
                                      "onChangeValue": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onCreateRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessRule": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onProcessSheet": Array [],
                                      "onProcessStyle": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                      "onUpdate": Array [
                                        [Function],
                                      ],
                                    },
                                  },
                                  "version": "10.3.0",
                                },
                                "keyframes": Object {},
                                "link": false,
                                "meta": "Themed",
                                "parent": [Circular],
                                "sheet": [Circular],
                              },
                              "queue": undefined,
                              "renderer": DomRenderer {
                                "element": <style
                                  data-jss=""
                                  data-meta="Themed"
                                >
                                  
.buttonGroup-0-2-1 {
  width: 100%;
  display: flex;
  padding-top: 40px;
  justify-content: space-between;
}
.square-0-2-2 {
  color: #fff;
  width: 49%;
  height: 40px;
  font-weight: bold;
  text-transform: uppercase;
  background-color: darkviolet;
}

                                </style>,
                                "getPropertyValue": [Function],
                                "hasInsertedRules": false,
                                "removeProperty": [Function],
                                "setProperty": [Function],
                                "setSelector": [Function],
                                "sheet": [Circular],
                              },
                              "rules": RuleList {
                                "classes": Object {
                                  "buttonGroup": "buttonGroup-0-2-1",
                                  "square": "square-0-2-2",
                                },
                                "counter": 0,
                                "index": Array [
                                  Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                ],
                                "keyframes": Object {},
                                "map": Object {
                                  ".buttonGroup-0-2-1": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  ".square-0-2-2": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justify-content": "space-between",
                                    "padding-top": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "background-color": "darkviolet",
                                    "color": "#fff",
                                    "font-weight": "bold",
                                    "height": "40px",
                                    "text-transform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                                "options": Object {
                                  "Renderer": [Function],
                                  "classNamePrefix": "",
                                  "classes": Object {
                                    "buttonGroup": "buttonGroup-0-2-1",
                                    "square": "square-0-2-2",
                                  },
                                  "generateId": [Function],
                                  "index": -9007199254740991,
                                  "insertionPoint": undefined,
                                  "jss": Jss {
                                    "generateId": [Function],
                                    "id": 2,
                                    "options": Object {
                                      "Renderer": [Function],
                                      "createGenerateId": [Function],
                                      "id": Object {
                                        "minify": false,
                                      },
                                      "plugins": Array [],
                                    },
                                    "plugins": PluginsRegistry {
                                      "plugins": Object {
                                        "external": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                            "onUpdate": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                            "onProcessRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onProcessRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onProcessStyle": [Function],
                                          },
                                        ],
                                        "internal": Array [
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onChangeValue": [Function],
                                            "onCreateRule": [Function],
                                            "onProcessStyle": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                          Object {
                                            "onCreateRule": [Function],
                                          },
                                        ],
                                      },
                                      "registry": Object {
                                        "onChangeValue": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onCreateRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessRule": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onProcessSheet": Array [],
                                        "onProcessStyle": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "onUpdate": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "version": "10.3.0",
                                  },
                                  "keyframes": Object {},
                                  "link": false,
                                  "meta": "Themed",
                                  "parent": [Circular],
                                  "sheet": [Circular],
                                },
                                "raw": Object {
                                  "buttonGroup": Object {
                                    "display": "flex",
                                    "justifyContent": "space-between",
                                    "paddingTop": "40px",
                                    "width": "100%",
                                  },
                                  "square": Object {
                                    "backgroundColor": "darkviolet",
                                    "color": "#fff",
                                    "fontWeight": "bold",
                                    "height": "40px",
                                    "textTransform": "uppercase",
                                    "width": "49%",
                                  },
                                },
                              },
                            },
                          ],
                          "destroy": [Function],
                          "next": [Circular],
                          "tag": 36,
                        },
                        "tag": 36,
                      },
                      "tag": 192,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <button>
                  click me
                </button>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "button",
                "updateQueue": null,
              },
              "bubbles": undefined,
              "cancelable": undefined,
              "currentTarget": null,
              "defaultPrevented": undefined,
              "dispatchConfig": Object {
                "dependencies": Array [
                  "click",
                ],
                "eventPriority": 0,
                "phasedRegistrationNames": Object {
                  "bubbled": "onClick",
                  "captured": "onClickCapture",
                },
              },
              "eventPhase": undefined,
              "isDefaultPrevented": [Function],
              "isPersistent": [Function],
              "isPropagationStopped": [Function],
              "isTrusted": undefined,
              "nativeEvent": Event {
                "target": <button>
                  click me
                </button>,
                "type": "click",
              },
              "target": <button>
                click me
              </button>,
              "timeStamp": 1593210362556,
              "type": "click",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  >
    click me
  </button>
</Button>
`;

exports[`<ButtonGroup /> unit tests should match snapshot 1`] = `
<ButtonGroup>
  <div
    className="buttonGroup-0-2-1"
  />
</ButtonGroup>
`;
